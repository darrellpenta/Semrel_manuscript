{
    "contents" : "source( file = \"clear_and_setup.R\")\n\n# -------------------- TABLE 01 SEMREL: EXPERIMENTAL ITEM VERSIONS -----------------------------\n\nexp1.example = data.frame(\n  \n  Semantic.Integration = c(\n    \"Integrated\",\n    \" \",  \n    \"Unintegrated\",   \n    \" \"      ),\n  \n  Local.Noun.Number = c(\n    \"Singular\",\n    \"Plural\" ,   \n    \"Singular\",\n    \"Plural\"    ),\n  \n  Related = c(\n    \"The necklace with the colorful diamond\",\n    \"The necklace with the colorful diamonds\",\n    \"The necklace near the colorful diamond\",\n    \"The necklace near the colorful diamonds\"\n  ),\n  \n  Unrelated = c(\n    \"The necklace with the colorful feather\",\n    \"The necklace with the colorful feathers\",\n    \"The necklace near the colorful feather\",\n    \"The necklace near the colorful feathers\"\n  ))\n\nwrite.xlsx( exp1.example, file = \"output/table01_example_stimulus.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\n# -------------------- TABLE 02 SEMREL: RELATEDNESS -----------------------------\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel_ratings_data_read_in_dataframe.R\")\n\naov.rel <- summary( aov( RelatedHL ~ related + Error(item / related ), data = d.sr))\np       <- zapsmall( aov.rel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\nexp1.related <- data.frame(\n   Local.Noun.Number = c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",               \n    paste(\"Note: Scale was 1(unrelated) to 7(very related).\") \n    ), \n  \n  Related =            c(\n    paste( round( mean( relat.sing$RelatedHL), 2), \" (\", round( sd( relat.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( relat.plur$RelatedHL), 2), \" (\", round( sd( relat.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( relat$RelatedHL), 2)),\n    paste(\"SD in parens.\" )\n    ),\n  \n  Unrelated =           c(\n    paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel$RelatedHL), 2)),\n    paste(\" \") \n    ),\n  \n  pval =                 c(\n    paste(\" \", sep = \"\"),\n    paste(\" \", sep = \"\"),\n    paste( p,  get_stars( p)),\n    paste(\" \"))\n)\n\n\nwrite.xlsx( exp1.related, file = \"output/table02_SR_relatedness_ratings.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table02_SR_relatedness_ratings_ANOVA.txt\")\ncat(\"Table 02: Experiment 1 Critical Item Mean Relatedness Ratings ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( aov.rel)\nsink()\n\n# -------------------- TABLE 03 SEMREL: INTEGRATION ------------------------\n\n\naov.int.unint <- summary( aov(Integrated ~ integrated + Error(item / integrated ), data = d.sr))\np.int.unint   <- zapsmall( aov.int.unint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.int       <- summary( aov(Integrated ~ related + Error(item / related ), data = integ))\np.int         <- zapsmall( aov.int[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.unint     <- summary( aov(Integrated ~ related + Error(item / related ), data = unint))\np.unint       <- zapsmall( aov.unint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\nexp1.integration <- data.frame(\n  \n  Semantic.Integration = c(\n    \"Integrated\",\n    \" \",\n    \" \",\n    \"Unintegrated\",\n    \" \",\n    \" \",\n    paste(\"Int. vs. Unint. p-val:\", p.int.unint,  get_stars( p.int.unint)),\n    paste(\"Note: Scale was 1 (not linked) to 7 (tightly linked).\")\n    ),\n                  \n  Local.Noun.Number= c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",\n    \" \",\n    paste(\"SD in parens.\")\n    ),\n  \n  Related =            c(\n    paste( round( mean( relat.int.sing$Integrated), 2),  \" (\", round( sd( relat.int.sing$Integrated), 2),  \")\", sep = \"\"),\n    paste( round( mean(relat.int.plur$Integrated), 2),   \" (\", round( sd( relat.int.plur$Integrated), 2),  \")\", sep = \"\"),\n    paste( round( mean(integ.relat$Integrated), 2)),\n    paste( round( mean( relat.unint.sing$Integrated), 2),\" (\", round( sd( relat.unint.sing$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean(relat.unint.plur$Integrated), 2), \" (\", round( sd( relat.unint.plur$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean(unint.relat$Integrated), 2)),\n    \" \",\n    \" \"\n    ),\n                  \n   Unrelated =            c(\n     paste( round( mean( unrel.int.sing$Integrated), 2), \" (\", round( sd( unrel.int.sing$Integrated), 2), \")\", sep = \"\"),\n     paste( round( mean(unrel.int.plur$Integrated), 2),  \" (\", round( sd( unrel.int.plur$Integrated), 2), \")\", sep = \"\"),\n     paste( round( mean(integ.unrel$Integrated), 2)),\n     paste( round( mean( unrel.unint.sing$Integrated), 2),\" (\", round( sd( unrel.unint.sing$Integrated), 2), \")\", sep = \"\"),\n     paste( round( mean(unrel.unint.plur$Integrated), 2), \" (\", round( sd( unrel.unint.plur$Integrated), 2), \")\", sep = \"\"),\n     paste( round( mean(unint.unrel$Integrated), 2)),\n     \" \",\n     \" \"),\n  \n  pval =   c(\n    \" \",\n    \" \",\n    paste( p.int,  get_stars( p.int)),\n    \" \",\n    \" \",\n    paste( p.unint,  get_stars( p.unint)),\n    \" \",\n    \" \"\n  )\n)\n\n\n\nwrite.xlsx(exp1.integration, file =\"output/table03_SR_integration_ratings.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink( \"output/table03_SR_integration_ratings_ANOVA.txt\")\ncat(\"Table 03: Experiment 1 Critical Item Mean Integration Ratings ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\ncat( \"Integrated vs. Unintegrated\",br)\nprint( aov.int.unint)\ncat( br, br, line, br, br, \"Integrated\", br, br)\nprint( aov.int)\ncat( br, br, line, br, br, \"Unntegrated\", br, br)\nprint( aov.unint)\n\nsink()\n\n# -------------------- TABLE 04 SEMREL: ASSOCIATION ------------------\n\naov.assoc <- summary( aov(back.trans ~ related + Error(item / related ), data = d.sr))\np         <- zapsmall( aov.assoc[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\nexp1.assoc <- data.frame(\n  Local.Noun.Number= c(\n    \"Singular\",\n    \"Plural\",\n    paste(\"Note: Back transofmred proportions of ASIN transformed proportions.\")    \n    ),\n  \n  Related =     c(\n    paste( round( mean( relat.sing$back.trans), 2), \" (\", round( sd( relat.sing$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean(relat.plur$back.trans), 2),  \" (\", round( sd( relat.plur$back.trans), 2), \")\", sep = \"\"),\n    paste(\"SD in parens.\")   \n  ),\n  \n  Unrelated =   c(\n    paste( round( mean( unrel.sing$back.trans), 2), \" (\", round( sd( unrel.sing$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean(unrel.plur$back.trans), 2),  \" (\", round( sd( unrel.plur$back.trans), 2), \")\", sep = \"\"),\n    \" \"  \n    ),\n  \n  pval =       c(\n    paste(\" \", sep = \"\"),\n    paste( p, get_stars( p)),\n    \" \" )\n)\n\n\nwrite.xlsx(exp1.related, file=\"output/table04_SR_association_proportions.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table4_SR_association_proportions_ANOVA.txt\")\ncat(\"Table 04: Experiment 1 Critical Item Mean Head-to-Local Association Proportions ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( aov.assoc)\nsink()\n\n# -------------------- TABLE 05 SEMREL: ERROR RATES AND RESPONSE COUNTS ------------\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel_error_data_read_in_dataframe.R\")\n\nexp1.err.rates <- data.frame(\n  \n  Condition.Related = c(\n    \"Related\",\n    \" \",\n    \" \",\n    \" \",\n    \"Unrelated\",\n    \" \",\n    \" \",\n    \" \"\n    ),\n  \n  \n  Condition.Integrated = c(\n    \"Integrated\",\n    \"Integrated\",\n    \"Unintegrated\",\n    \"Unintegrated\",\n    \"Integrated\",\n    \"Integrated\",\n    \"Unintegrated\",\n    \"Unintegrated\"\n    ),\n  \n  \n  Local.Noun.Number = c(\n    \"Plural\",\n    \"Singular\",    \n    \"Plural\",\n    \"Singular\",    \n    \"Plural\",\n    \"Singular\",    \n    \"Plural\",\n    \"Singular\"\n    ),\n  \n  Error.Rate   = c(\n100*( sum( relat.int.plur$errd)   / sum( relat.int.plur$errcord)) ,\n100*( sum( relat.int.sing$errd)   / sum( relat.int.sing$errcord)) ,\n100*( sum( relat.unint.plur$errd) / sum( relat.unint.plur$errcord)),\n100*( sum( relat.unint.sing$errd) / sum( relat.unint.sing$errcord)),\n100*( sum( unrel.int.plur$errd)   / sum( unrel.int.plur$errcord)),\n100*( sum( unrel.int.sing$errd)   / sum( unrel.int.sing$errcord)),\n100*( sum( unrel.unint.plur$errd) / sum( unrel.unint.plur$errcord)),\n100*( sum( unrel.unint.sing$errd) / sum( unrel.unint.sing$errcord))\n),\n\nError   = c(\n  paste( sum( relat.int.plur$errd)  ,    \" (\", sum( relat.int.plur$errd   -  relat.int.plur$err ) , \")\", sep = \"\"),  \n  paste( sum( relat.int.sing$errd)  ,    \" (\", sum( relat.int.sing$errd   -  relat.int.sing$err ) , \")\", sep = \"\"),  \n  paste( sum( relat.unint.plur$errd),    \" (\", sum( relat.unint.plur$errd -  relat.unint.plur$err), \")\", sep = \"\"),\n  paste( sum( relat.unint.sing$errd),    \" (\", sum( relat.unint.sing$errd -  relat.unint.sing$err), \")\", sep = \"\"), \n  paste( sum( unrel.int.plur$errd)  ,    \" (\", sum( unrel.int.plur$errd   -  unrel.int.plur$err ) , \")\", sep = \"\"),     \n  paste( sum( unrel.int.sing$errd)  ,    \" (\", sum( unrel.int.sing$errd   -  unrel.int.sing$err ) , \")\", sep = \"\"),   \n  paste( sum( unrel.unint.plur$errd),    \" (\", sum( unrel.unint.plur$errd -  unrel.unint.plur$err), \")\", sep = \"\"),\n  paste( sum( unrel.unint.sing$errd),    \" (\", sum( unrel.unint.sing$errd -  unrel.unint.sing$err), \")\", sep = \"\")\n  ),\n \nCorrect   = c(\n  paste( sum( relat.int.plur$corrd)  ,    \" (\", sum( relat.int.plur$corrd   -  relat.int.plur$corr ) , \")\", sep = \"\"),  \n  paste( sum( relat.int.sing$corrd)  ,    \" (\", sum( relat.int.sing$corrd   -  relat.int.sing$corr ) , \")\", sep = \"\"),  \n  paste( sum( relat.unint.plur$corrd),    \" (\", sum( relat.unint.plur$corrd -  relat.unint.plur$corr), \")\", sep = \"\"),\n  paste( sum( relat.unint.sing$corrd),    \" (\", sum( relat.unint.sing$corrd -  relat.unint.sing$corr), \")\", sep = \"\"), \n  paste( sum( unrel.int.plur$corrd)  ,    \" (\", sum( unrel.int.plur$corrd   -  unrel.int.plur$corr ) , \")\", sep = \"\"),     \n  paste( sum( unrel.int.sing$corrd)  ,    \" (\", sum( unrel.int.sing$corrd   -  unrel.int.sing$corr ) , \")\", sep = \"\"),   \n  paste( sum( unrel.unint.plur$corrd),    \" (\", sum( unrel.unint.plur$corrd -  unrel.unint.plur$corr), \")\", sep = \"\"),\n  paste( sum( unrel.unint.sing$corrd),    \" (\", sum( unrel.unint.sing$corrd -  unrel.unint.sing$corr), \")\", sep = \"\")\n  ),\n\nUninflected   = c(\n  paste( sum( relat.int.plur$unind)  ,    \" (\", sum( relat.int.plur$unind   -  relat.int.plur$unin ) , \")\", sep = \"\"),  \n  paste( sum( relat.int.sing$unind)  ,    \" (\", sum( relat.int.sing$unind   -  relat.int.sing$unin ) , \")\", sep = \"\"),  \n  paste( sum( relat.unint.plur$unind),    \" (\", sum( relat.unint.plur$unind -  relat.unint.plur$unin), \")\", sep = \"\"),\n  paste( sum( relat.unint.sing$unind),    \" (\", sum( relat.unint.sing$unind -  relat.unint.sing$unin), \")\", sep = \"\"), \n  paste( sum( unrel.int.plur$unind)  ,    \" (\", sum( unrel.int.plur$unind   -  unrel.int.plur$unin ) , \")\", sep = \"\"),     \n  paste( sum( unrel.int.sing$unind)  ,    \" (\", sum( unrel.int.sing$unind   -  unrel.int.sing$unin ) , \")\", sep = \"\"),   \n  paste( sum( unrel.unint.plur$unind),    \" (\", sum( unrel.unint.plur$unind -  unrel.unint.plur$unin), \")\", sep = \"\"),\n  paste( sum( unrel.unint.sing$unind),    \" (\", sum( unrel.unint.sing$unind -  unrel.unint.sing$unin), \")\", sep = \"\")\n  ),\n\nMiscellaneous   = c(\n  sum( relat.int.plur$misc)  ,   \n  sum( relat.int.sing$misc)  ,   \n  sum( relat.unint.plur$misc), \n  sum( relat.unint.sing$misc),  \n  sum( unrel.int.plur$misc)  ,      \n  sum( unrel.int.sing$misc)  ,    \n  sum( unrel.unint.plur$misc), \n  sum( unrel.unint.sing$misc))\n)    \n\n\nwrite.xlsx(exp1.err.rates, file=\"output/table05_SR_error_rates_response_counts.xlsx\",  col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table05_SR_response_summary.txt\")\ncat(\"Table 05: Experiment 1 Response Summaries\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n\nresponse.summary <- data.frame(\nCode =  c(\n  \"All Critical Trials\",\n  \"Correclty Inflected\",\n  \"Agreement Errors\",\n  \"Uninflected Responses\",\n  \"Miscellaneous Cases\",\n  \"No Response\"\n),\n  \nTotal  = c(\n  length( d.sr$maincode),\n  sum( d.sr$corrd),\n  sum( d.sr$errd),\n  sum( d.sr$unind),\n  sum( d.sr$misc),\n  sum( d.sr$noresp)\n))  \n\nprint(response.summary)\n\nsink()\n\n# -------------------- TABLE 06 SEMREL: ERROR RATE ANOVA RESULTS ------------\n# F1\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel_f1_ANOVAS_read_in_dataframe.R\")\n\n\na.2x2x2 <- aov(error ~ semint * related * n2num + Error( subj / ( semint * related * n2num)), data = data.subj)\nsink(\"output/table06_SR_f1_anova.txt\")\ncat(\"Table 6: F1 2 x 2 x 2 ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( summary( a.2x2x2), digits = 6)\nsink()\naov.sum <- summary( a.2x2x2)\n\n#n2num\nf.n2n <- zapsmall( aov.sum[[4]][[1]][[\"F value\"]][1], digits = 4)\np.n2n <- zapsmall( aov.sum[[4]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2n <- zapsmall( aov.sum[[4]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#related\nf.rel <- zapsmall( aov.sum[[3]][[1]][[\"F value\"]][1], digits = 4)\np.rel <- zapsmall( aov.sum[[3]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rel <- zapsmall( aov.sum[[3]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X rel\nf.n2r <- zapsmall( aov.sum[[7]][[1]][[\"F value\"]][1], digits = 4)\np.n2r <- zapsmall( aov.sum[[7]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2r <- zapsmall( aov.sum[[7]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#semint\nf.int <- zapsmall( aov.sum[[2]][[1]][[\"F value\"]][1], digits = 4)\np.int <- zapsmall( aov.sum[[2]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.int <- zapsmall( aov.sum[[2]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X int \nf.n2i <- zapsmall( aov.sum[[6]][[1]][[\"F value\"]][1], digits = 4)\np.n2i <- zapsmall( aov.sum[[6]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2i <- zapsmall( aov.sum[[6]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#rel X int\nf.rXi <- zapsmall( aov.sum[[5]][[1]][[\"F value\"]][1], digits = 4)\np.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#rel X int\nf.rXi <- zapsmall( aov.sum[[5]][[1]][[\"F value\"]][1], digits = 4)\np.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2num X rel X int\nf.2ri <- zapsmall( aov.sum[[8]][[1]][[\"F value\"]][1], digits = 4)\np.2ri <- zapsmall( aov.sum[[8]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.2ri <- zapsmall( aov.sum[[8]][[1]][[\"Mean Sq\"]][2], digits = 4)\n\n\nerror.rate.ANOVA.1 <- data.frame(\n  \nEffect = c(\n  \"Local Noun Number\",\n  \"Related\",\n  \"Local Noun Number X Relatedness\",\n  \"Integration\",\n  \"Local Noun Number X Integration\",\n  \"Relatedness X Integration\",\n  \"Local Noun Number X Relatedness X Integration\"\n  ),\n\nF1    = c(\n  f.n2n,\n  f.rel,\n  f.n2r,\n  f.int,\n  f.n2i,\n  f.rXi,\n  f.2ri\n),\n\nMSe   =c(\npaste( m.n2n,\" (\", get_stars( p.n2n),\")\", sep = \"\"),\npaste( m.rel,\" (\", get_stars( p.rel),\")\", sep = \"\"),\npaste( m.n2r,\" (\", get_stars( p.n2r),\")\", sep = \"\"),\npaste( m.int,\" (\", get_stars( p.int),\")\", sep = \"\"),\npaste( m.n2i,\" (\", get_stars( p.n2i),\")\", sep = \"\"),\npaste( m.rXi,\" (\", get_stars( p.rXi),\")\", sep = \"\"),\npaste( m.2ri,\" (\", get_stars( p.2ri),\")\", sep = \"\"))   \n)\n\n\n# F2\nsource( file = \"semrel_f2_ANOVAS_read_in_dataframe.R\")\n\n\na.2x2x2 <- aov(error ~ semint * related * n2num + Error(item / ( semint * related * n2num)), data = data.item)\nsink(\"output/table06_SR_f2_anova.txt\")\ncat(\"Table 06: F2 2 x 2 x 2 ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( summary( a.2x2x2), digits = 6)\nsink()\n\naov.sum <- summary( a.2x2x2)\n\n#n2num\nf.n2n <- zapsmall( aov.sum[[4]][[1]][[\"F value\"]][1], digits = 4)\np.n2n <- zapsmall( aov.sum[[4]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2n <- zapsmall( aov.sum[[4]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#related\nf.rel <- zapsmall( aov.sum[[3]][[1]][[\"F value\"]][1], digits = 4)\np.rel <- zapsmall( aov.sum[[3]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rel <- zapsmall( aov.sum[[3]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X rel\nf.n2r <- zapsmall( aov.sum[[7]][[1]][[\"F value\"]][1], digits = 4)\np.n2r <- zapsmall( aov.sum[[7]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2r <- zapsmall( aov.sum[[7]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#semint\nf.int <- zapsmall( aov.sum[[2]][[1]][[\"F value\"]][1], digits = 4)\np.int <- zapsmall( aov.sum[[2]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.int <- zapsmall( aov.sum[[2]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X int \nf.n2i <- zapsmall( aov.sum[[6]][[1]][[\"F value\"]][1], digits = 4)\np.n2i <- zapsmall( aov.sum[[6]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2i <- zapsmall( aov.sum[[6]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#rel X int\nf.rXi <- zapsmall( aov.sum[[5]][[1]][[\"F value\"]][1], digits = 4)\np.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#rel X int\nf.rXi <- zapsmall( aov.sum[[5]][[1]][[\"F value\"]][1], digits = 4)\np.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rXi <- zapsmall( aov.sum[[5]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2num X rel X int\nf.2ri <- zapsmall( aov.sum[[8]][[1]][[\"F value\"]][1], digits = 4)\np.2ri <- zapsmall( aov.sum[[8]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.2ri <- zapsmall( aov.sum[[8]][[1]][[\"Mean Sq\"]][2], digits = 4)\n\nerror.rate.ANOVA.2 <- data.frame(\n  \n  Effect = c(\n    \"Local Noun Number\",\n    \"Related\",\n    \"Local Noun Number X Relatedness\",\n    \"Integration\",\n    \"Local Noun Number X Integration\",\n    \"Relatedness X Integration\",\n    \"Local Noun Number X Relatedness X Integration\"\n    ),\n  \n  F2    = c(\n    f.n2n,\n    f.rel,\n    f.n2r,\n    f.int,\n    f.n2i,\n    f.rXi,\n    f.2ri\n  ),\n  \n  MSe   =c(\n    paste( m.n2n,\" (\", get_stars( p.n2n), \")\", sep = \"\"),\n    paste( m.rel,\" (\", get_stars( p.rel), \")\", sep = \"\"),\n    paste( m.n2r,\" (\", get_stars( p.n2r), \")\", sep = \"\"),\n    paste( m.int,\" (\", get_stars( p.int), \")\", sep = \"\"),\n    paste( m.n2i,\" (\", get_stars( p.n2i), \")\", sep = \"\"),\n    paste( m.rXi,\" (\", get_stars( p.rXi), \")\", sep = \"\"),\n    paste( m.2ri,\" (\", get_stars( p.2ri), \")\", sep = \"\"))   \n)\n\n\nerror.rate.ANOVA <- cbind(error.rate.ANOVA.1,error.rate.ANOVA.2[,c(2:3)])\n\nwrite.xlsx(error.rate.ANOVA, file=\"output/table06_SR_error_rate_anovas.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\n# -------------------- TABLE 07 SEMREL2: CATEGORY COORDINATE ITEM VERSIONS -----------------------------\n\nexp2.cat.example = data.frame(\n  \n  Relationship = c(\n    \"Related\",\n    \"Unrelated\"\n    ),\n  \n  Singular = c(\n    \"The saw by the oily wrench\",\n    \"The saw by the oily rag\"\n    ),\n  \n  Plural = c(\n    \"The saw by the oily wrenches\",\n    \"The saw by the oily rags\"\n    ))\n  \n \nwrite.xlsx( exp2.cat.example, file = \"output/table07_CAT_example_stimulus.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\n# -------------------- TABLE 08 SEMREL2: PROPERTY ITEM VERSIONS -----------------------------\n\nexp2.prop.example = data.frame(\n  \n  Relationship = c(\n    \"Attribute+Assoc.\",\n    \"Associate\",\n    \"Unrelated\"\n  ),\n  \n  Singular = c(\n    \"The jar near the sticky lid\",\n    \"The jar near the sticky cookie\",\n    \"The jar near the sticky bagel\"\n  ),\n  \n  Plural = c(\n    \"The jar near the sticky lids\",\n    \"The jar near the sticky cookies\",\n    \"The jar near the sticky bagels\"\n  ))\n\n\nwrite.xlsx( exp2.prop.example, file = \"output/table08_PROP_example_stimulus.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\n# -------------------- TABLE 09 SEMREL2: CATEGORY COORDINATE RELATEDNESS -----------------------------\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel2_CAT_ratings_data_read_in_dataframe.R\")\n\n\naov.rel <- summary( aov( RelatedHL ~ related + Error(item / related ), data = d.cat))\np       <- zapsmall( aov.rel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\nexp2.related <- data.frame(\n  Local.Noun.Number = c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",               \n    paste(\"Note: Scale was 1(unrelated) to 7(very related).\") \n  ), \n  \n  Related =            c(\n    paste( round( mean( relat.sing$RelatedHL), 2), \" (\", round( sd( relat.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( relat.plur$RelatedHL), 2), \" (\", round( sd( relat.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( relat$RelatedHL), 2)),\n    paste(\"SD in parens.\" )\n  ),\n  \n  Unrelated =           c(\n    paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel$RelatedHL), 2)),\n    paste(\" \") \n  ),\n  \n  pval =                 c(\n    paste(\" \", sep = \"\"),\n    paste(\" \", sep = \"\"),\n    paste( p,  get_stars( p)),\n    paste(\" \"))\n)\n\nwrite.xlsx( exp2.related, file = \"output/table09_CAT_relatedness_ratings.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table09_CAT_relatedness_ratings_ANOVA.txt\")\ncat(\"Table 09: Experiment 2 CAT Critical Item Mean Relatedness Ratings ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( aov.rel)\nsink()\n\n# -------------------- TABLE 10 SEMREL2: CATEGORY COORDINATE INTEGRATION ------------------------\n\n\naov.int.unint <- summary( aov(Integrated ~ related + Error(item / related ), data = d.cat))\np.int.unint   <- zapsmall( aov.int.unint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\n\nexp2.integration <- data.frame(\n  \n\n\n  Local.Noun.Number= c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",\n    paste(\"Int. vs. Unint. p-val:\", p.int.unint,  get_stars( p.int.unint)),\n    paste(\"Note: Scale was 1 (not linked) to 7 (tightly linked).\")\n  ),\n  \n  Related =            c(\n    paste( round( mean( relat.sing$Integrated), 2),  \" (\", round( sd( relat.sing$Integrated), 2),  \")\", sep = \"\"),\n    paste( round( mean(relat.plur$Integrated), 2),   \" (\", round( sd( relat.plur$Integrated), 2),  \")\", sep = \"\"),\n    paste( round( mean( relat$Integrated), 2)),\n   \" \",\n   \"SD in Parens.\"\n    ),\n    \n  Unrelated =            c(\n    paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean(unrel.plur$Integrated), 2),  \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel$Integrated), 2)),\n    \" \",\n    \" \")\n)\n\nwrite.xlsx(exp2.integration, file =\"output/table10_CAT_integration_ratings.xlsx\", \n           col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table10_CAT_integration_ratings_ANOVA.txt\")\ncat(\"Table 10: Experiment 2 Category Critical Item Mean Inteagration Ratings ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( aov.int.unint)\nsink()\n\n# -------------------- TABLE 11 SEMREL2: PROPERTY RELATEDNESS -----------------------------\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel2_PROP_ratings_data_read_in_dataframe.R\")\n\n\naov.att.ass <- summary( aov( RelatedHL ~ related + Error(item / related ), data = attrb.assoc))\np.att.ass   <- zapsmall( aov.att.ass[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.ass.unr <- summary( aov( RelatedHL ~ related + Error(item / related ), data = assoc.unrel))\np.ass.unr   <- zapsmall( aov.ass.unr[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.att.unr <- summary( aov( RelatedHL ~ related + Error(item / related ), data = attrb.unrel))\np.att.unr   <- zapsmall( aov.att.unr[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\n\nexp2.related <- data.frame(\n  Local.Noun.Number = c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",               \n    paste(\"Note: Scale was 1(unrelated) to 7(very related).\"), \n    \"\",\n    \"Att. vs Assoc pval\",\n    \"Assoc. vs Unrel pval\",\n    \"Att. vs Unrel pval\"\n    ), \n  \n  Attribute =            c(\n    paste( round( mean( attrb.sing$RelatedHL), 2), \" (\", round( sd( attrb.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( attrb.plur$RelatedHL), 2), \" (\", round( sd( attrb.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( attrb$RelatedHL), 2)),\n    paste(\"SD in parens.\" ),\n    \"\",\n    paste( p.att.ass,  get_stars( p.att.ass)),\n    paste( p.ass.unr,  get_stars( p.att.unr)),\n    paste( p.att.unr,  get_stars( p.att.unr))\n  ),\n  Associate =            c(\n    paste( round( mean( assoc.sing$RelatedHL), 2), \" (\", round( sd( assoc.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( assoc.plur$RelatedHL), 2), \" (\", round( sd( assoc.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( assoc$RelatedHL), 2)),\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\"\n  ),\n  \n  Unrelated =           c(\n    paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel$RelatedHL), 2)),\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\" \n  ))\n\nwrite.xlsx( exp2.related, file = \"output/table11_PROP_relatedness_ratings.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table11_PROP_relatedness_ratings_ANOVA.txt\")\ncat(\"Table 11: Experiment 2 CAT Critical Item Mean Relatedness Ratings ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\ncat(\"Attrb vs. Assoc\")\nprint( aov.att.ass)\ncat( br, br, line, br, br, \"Assoc. vs. Unrel\", br, br)\nprint( aov.ass.unr)\ncat( br, br, line, br, br, \"Attrb vs. Unrel\", br, br)\nprint( aov.att.unr)\n\nsink()\n\n# -------------------- TABLE 12 SEMREL2: PROPERTY INTEGRATION ------------------------\n\naov.att.ass <- summary( aov( Integrated ~ related + Error(item / related ), data = attrb.assoc))\np.att.ass   <- zapsmall( aov.att.ass[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.ass.unr <- summary( aov( Integrated ~ related + Error(item / related ), data = assoc.unrel))\np.ass.unr   <- zapsmall( aov.ass.unr[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.att.unr <- summary( aov( Integrated ~ related + Error(item / related ), data = attrb.unrel))\np.att.unr   <- zapsmall( aov.att.unr[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\n\nexp2.integration <- data.frame(\n  Local.Noun.Number = c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",               \n    paste(\"Note: Scale was 1(not linked) to 7(tighly linked).\"), \n    \"\",\n    \"Att. vs Assoc pval\",\n    \"Assoc. vs Unrel pval\",\n    \"Att. vs Unrel pval\"\n  ), \n  \n  Attribute =            c(\n    paste( round( mean( attrb.sing$Integrated), 2), \" (\", round( sd( attrb.sing$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( attrb.plur$Integrated), 2), \" (\", round( sd( attrb.plur$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( attrb$Integrated), 2)),\n    paste(\"SD in parens.\" ),\n    \"\",\n    paste( p.att.ass,  get_stars( p.att.ass)),\n    paste( p.ass.unr,  get_stars( p.att.unr)),\n    paste( p.att.unr,  get_stars( p.att.unr))\n  ),\n  Associate =            c(\n    paste( round( mean( assoc.sing$Integrated), 2), \" (\", round( sd( assoc.sing$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( assoc.plur$Integrated), 2), \" (\", round( sd( assoc.plur$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( assoc$Integrated), 2)),\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\"\n  ),\n  \n  Unrelated =           c(\n    paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel$Integrated), 2)),\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\" \n  ))\n\n\nwrite.xlsx(exp2.integration, file =\"output/table12_PROP_integration_ratings.xlsx\", \n           col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table12_PROP_integration_ratings_ANOVA.txt\")\ncat(\"Table 12: Experiment 2 Property Item Mean Inteagration Ratings ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n\ncat(\"Attrb vs. Assoc\")\nprint( aov.att.ass)\ncat( br, br, line, br, br, \"Assoc. vs. Unrel\", br, br)\nprint( aov.ass.unr)\ncat( br, br, line, br, br, \"Attrb vs. Unrel\", br, br)\nprint( aov.att.unr)\n\nsink()\n\n# -------------------- TABLE 13 SEMREL2: PROPERTY ASSOCIATION ------------------------\n\naov.att.ass <- summary( aov( AssArc.H.L ~ related + Error(item / related ), data = attrb.assoc))\np.att.ass   <- zapsmall( aov.att.ass[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.ass.unr <- summary( aov( AssArc.H.L  ~ related + Error(item / related ), data = assoc.unrel))\np.ass.unr   <- zapsmall( aov.ass.unr[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\naov.att.unr <- summary( aov( AssArc.H.L  ~ related + Error(item / related ), data = attrb.unrel))\np.att.unr   <- zapsmall( aov.att.unr[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n\n\nexp2.association <- data.frame(\n  Local.Noun.Number = c(\n    \"Singular\",\n    \"Plural\", \n    \"Mean\",               \n    paste(\"Note: Back transofmred proportions of ASIN transformed proportions.\"),    \n    \"\",\n    \"Att. vs Assoc pval\",\n    \"Assoc. vs Unrel pval\",\n    \"Att. vs Unrel pval\"\n  ), \n  \n  Attribute =            c(\n    paste( round( mean( attrb.sing$back.trans), 2), \" (\", round( sd( attrb.sing$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean( attrb.plur$back.trans), 2), \" (\", round( sd( attrb.plur$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean( attrb$back.trans), 2)),\n    paste(\"SD in parens.\" ),\n    \"\",\n    paste( p.att.ass,  get_stars( p.att.ass)),\n    paste( p.ass.unr,  get_stars( p.att.unr)),\n    paste( p.att.unr,  get_stars( p.att.unr))\n  ),\n  Associate =            c(\n    paste( round( mean( assoc.sing$back.trans), 2), \" (\", round( sd( assoc.sing$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean( assoc.plur$back.trans), 2), \" (\", round( sd( assoc.plur$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean( assoc$back.trans), 2)),\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\"\n  ),\n  \n  Unrelated =           c(\n    paste( round( mean( unrel.sing$back.trans), 2), \" (\", round( sd( unrel.sing$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel.plur$back.trans), 2), \" (\", round( sd( unrel.plur$back.trans), 2), \")\", sep = \"\"),\n    paste( round( mean( unrel$back.trans), 2)),\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\" \n  ))\n\n\nwrite.xlsx(exp2.integration, file =\"output/table13_PROP_association_proportions.xlsx\", \n           col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table13_PROP_association_proportions_ANOVA.txt\")\ncat(\"Table 13: Experiment 2 Property Item Mean Association Proportions ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n\ncat(\"Attrb vs. Assoc\")\nprint( aov.att.ass)\ncat( br, br, line, br, br, \"Assoc. vs. Unrel\", br, br)\nprint( aov.ass.unr)\ncat( br, br, line, br, br, \"Attrb vs. Unrel\", br, br)\nprint( aov.att.unr)\n\nsink()\n\n\n# -------------------- TABLE 14 SEMREL2: ERROR RATES AND RESPONSE COUNTS ------------\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel2_CAT_error_data_read_in_dataframe.R\")\n\nexp2.cat.err.rates <- data.frame(\n  \n  Condition.Related = c(\n    \"Related\",\n    \"Related\",\n    \"Unrelated\",\n    \"Unrelated\"\n  ),\n  \n  Local.Noun.Number = c(\n    \"Plural\",\n    \"Singular\",    \n    \"Plural\",\n    \"Singular\"\n  ),\n  \n  Error.Rate   = c(\n    100*( sum( relat.plur$errd)   / sum( relat.plur$errcord)) ,\n    100*( sum( relat.sing$errd)   / sum( relat.sing$errcord)) ,\n    100*( sum( unrel.plur$errd)   / sum( unrel.plur$errcord)),\n    100*( sum( unrel.sing$errd)   / sum( unrel.sing$errcord))\n  ),\n  \n  Error   = c(\n    paste( sum( relat.plur$errd)  ,    \" (\", sum( relat.plur$errd   -  relat.plur$err ) , \")\", sep = \"\"),  \n    paste( sum( relat.sing$errd)  ,    \" (\", sum( relat.sing$errd   -  relat.sing$err ) , \")\", sep = \"\"),  \n    paste( sum( unrel.plur$errd)  ,    \" (\", sum( unrel.plur$errd   -  unrel.plur$err ) , \")\", sep = \"\"),     \n    paste( sum( unrel.sing$errd)  ,    \" (\", sum( unrel.sing$errd   -  unrel.sing$err ) , \")\", sep = \"\")   \n   ),\n  \n  Correct   = c(\n    paste( sum( relat.plur$corrd)  ,    \" (\", sum( relat.plur$corrd   -  relat.plur$corr ) , \")\", sep = \"\"),  \n    paste( sum( relat.sing$corrd)  ,    \" (\", sum( relat.sing$corrd   -  relat.sing$corr ) , \")\", sep = \"\"),  \n    paste( sum( unrel.plur$corrd)  ,    \" (\", sum( unrel.plur$corrd   -  unrel.plur$corr ) , \")\", sep = \"\"),\n    paste( sum( unrel.sing$corrd)  ,    \" (\", sum( unrel.sing$corrd   -  unrel.sing$corr ) , \")\", sep = \"\")   \n      ),\n  \n  Uninflected   = c(\n    paste( sum( relat.plur$unind)  ,    \" (\", sum( relat.plur$unind   -  relat.plur$unin ) , \")\", sep = \"\"),  \n    paste( sum( relat.sing$unind)  ,    \" (\", sum( relat.sing$unind   -  relat.sing$unin ) , \")\", sep = \"\"),\n    paste( sum( unrel.plur$unind)  ,    \" (\", sum( unrel.plur$unind   -  unrel.plur$unin ) , \")\", sep = \"\"),     \n    paste( sum( unrel.sing$unind)  ,    \" (\", sum( unrel.sing$unind   -  unrel.sing$unin ) , \")\", sep = \"\")\n    ),\n  \n  Miscellaneous   = c(\n    sum( relat.plur$misc)  ,   \n    sum( relat.sing$misc)  ,\n    sum( unrel.plur$misc)  ,      \n    sum( unrel.sing$misc) )    \n)\n\n\nsource( file = \"semrel2_PROP_error_data_read_in_dataframe.R\")\n\nexp2.prop.err.rates <- data.frame(\n  \n  Condition.Related = c(\n    \"Attribute\",\n    \"Attribute\",\n    \"Associate \",\n    \"Associate \",\n    \"Unrelated\",\n    \"Unrelated\"\n  ),\n  \n  Local.Noun.Number = c(\n    \"Plural\",\n    \"Singular\",    \n    \"Plural\",\n    \"Singular\",    \n    \"Plural\",\n    \"Singular\"\n  ),\n  \n  Error.Rate   = c(\n    100*( sum( attrb.plur$errd)  / sum( attrb.plur$errcord)) ,\n    100*( sum( attrb.sing$errd)  / sum( attrb.sing$errcord)) ,\n    100*( sum( assoc.plur$errd)  / sum( assoc.plur$errcord)),\n    100*( sum( assoc.sing$errd)  / sum( assoc.sing$errcord)),\n    100*( sum( unrel.plur$errd)  / sum( unrel.plur$errcord)),\n    100*( sum( unrel.sing$errd)  / sum( unrel.sing$errcord))\n  ),\n  \n  Error   = c(\n    paste( sum( attrb.plur$errd),    \" (\", sum( attrb.plur$errd -  attrb.plur$err), \")\", sep = \"\"),  \n    paste( sum( attrb.sing$errd),    \" (\", sum( attrb.sing$errd -  attrb.sing$err), \")\", sep = \"\"),  \n    paste( sum( assoc.plur$errd),    \" (\", sum( assoc.plur$errd -  assoc.plur$err), \")\", sep = \"\"),\n    paste( sum( assoc.sing$errd),    \" (\", sum( assoc.sing$errd -  assoc.sing$err), \")\", sep = \"\"), \n    paste( sum( unrel.plur$errd),    \" (\", sum( unrel.plur$errd -  unrel.plur$err), \")\", sep = \"\"),\n    paste( sum( unrel.sing$errd),    \" (\", sum( unrel.sing$errd -  unrel.sing$err), \")\", sep = \"\")\n  ),\n  \n  Correct   = c(\n    paste( sum( attrb.plur$corrd),    \" (\", sum( attrb.plur$corrd -  attrb.plur$corr), \")\", sep = \"\"),  \n    paste( sum( attrb.sing$corrd),    \" (\", sum( attrb.sing$corrd -  attrb.sing$corr), \")\", sep = \"\"),  \n    paste( sum( assoc.plur$corrd),    \" (\", sum( assoc.plur$corrd -  assoc.plur$corr), \")\", sep = \"\"),\n    paste( sum( assoc.sing$corrd),    \" (\", sum( assoc.sing$corrd -  assoc.sing$corr), \")\", sep = \"\"), \n    paste( sum( unrel.plur$corrd),    \" (\", sum( unrel.plur$corrd -  unrel.plur$corr), \")\", sep = \"\"),\n    paste( sum( unrel.sing$corrd),    \" (\", sum( unrel.sing$corrd -  unrel.sing$corr), \")\", sep = \"\")\n  ),\n  \n  Uninflected   = c(\n    paste( sum( attrb.plur$unind),    \" (\", sum( attrb.plur$unind -  attrb.plur$unin), \")\", sep = \"\"),  \n    paste( sum( attrb.sing$unind),    \" (\", sum( attrb.sing$unind -  attrb.sing$unin), \")\", sep = \"\"),  \n    paste( sum( assoc.plur$unind),    \" (\", sum( assoc.plur$unind -  assoc.plur$unin), \")\", sep = \"\"),\n    paste( sum( assoc.sing$unind),    \" (\", sum( assoc.sing$unind -  assoc.sing$unin), \")\", sep = \"\"), \n    paste( sum( unrel.plur$unind),    \" (\", sum( unrel.plur$unind -  unrel.plur$unin), \")\", sep = \"\"),\n    paste( sum( unrel.sing$unind),    \" (\", sum( unrel.sing$unind -  unrel.sing$unin), \")\", sep = \"\")\n  ),\n  \n  Miscellaneous   = c(\n    sum( attrb.plur$misc)  ,   \n    sum( attrb.sing$misc)  ,   \n    sum( assoc.plur$misc), \n    sum( assoc.sing$misc),  \n    sum( unrel.plur$misc), \n    sum( unrel.sing$misc))\n)    \n\n\nexp2.err.rates <-  rbind(exp2.cat.err.rates, exp2.prop.err.rates)\n\nwrite.xlsx(exp2.err.rates, file=\"output/table14_SR2_error_rates_response_counts.xlsx\",  col.names = TRUE, row.names = TRUE, append = FALSE)\n\nsink(\"output/table14_SR_response_summary.txt\")\ncat(\"Table 14: Experiment 2 Response Summaries\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n\nsource( file = \"semrel2_ALL_error_data_read_in_dataframe.R\")\nresponse.summary <- data.frame(\n  Code =  c(\n    \"All Critical Trials\",\n    \"Correclty Inflected\",\n    \"Agreement Errors\",\n    \"Uninflected Responses\",\n    \"Miscellaneous Cases\",\n    \"No Response\"\n  ),\n  \n  Total  = c(\n    length( d.sr2$maincode),\n    sum( d.sr2$corrd),\n    sum( d.sr2$errd),\n    sum( d.sr2$unind),\n    sum( d.sr2$misc),\n    sum( d.sr2$noresp)\n  ))  \n\n\nsink()\n\n# -------------------- TABLE 15 SEMREL2: CAT ERROR RATE ANOVA RESULTS ------------\n# F1\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel2_CAT_f1_ANOVAS_read_in_dataframe.R\")\n\n\na.2x2 <- aov(error ~ related * n2num + Error( subj / ( related * n2num)), data = data.subj)\nsink(\"output/table15_SR2_CAT_f1_anova.txt\")\ncat(\"Table 15: CAT F1 2 x 2 ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( summary( a.2x2), digits = 6)\nsink()\naov.sum <- summary( a.2x2)\n\n#n2num\nf.n2n <- zapsmall( aov.sum[[3]][[1]][[\"F value\"]][1], digits = 4)\np.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#related\nf.rel <- zapsmall( aov.sum[[2]][[1]][[\"F value\"]][1], digits = 4)\np.rel <- zapsmall( aov.sum[[2]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rel <- zapsmall( aov.sum[[2]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X rel\nf.n2r <- zapsmall( aov.sum[[4]][[1]][[\"F value\"]][1], digits = 4)\np.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Mean Sq\"]][2], digits = 4)\n\nerror.rate.ANOVA.1 <- data.frame(\n  \n  Effect = c(\n    \"Local Noun Number\",\n    \"Related\",\n    \"Local Noun Number X Relatedness\"\n    ),\n  \n  F1    = c(\n    f.n2n,\n    f.rel,\n    f.n2r\n    ),\n  \n  MSe   =c(\n    paste( m.n2n,\" (\", get_stars( p.n2n),\")\", sep = \"\"),\n    paste( m.rel,\" (\", get_stars( p.rel),\")\", sep = \"\"),\n    paste( m.n2r,\" (\", get_stars( p.n2r),\")\", sep = \"\"))   \n)\n\n\n# F2\nsource( file = \"semrel2_CAT_f2_ANOVAS_read_in_dataframe.R\")\n\n\na.2x2 <- aov(error ~ related * n2num + Error(item / (related * n2num)), data = data.item)\nsink(\"output/table15_SR2_CAT_f2_anova.txt\")\ncat(\"Table 15: CAT F2 2 x 2 ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( summary( a.2x2), digits = 6)\nsink()\n\naov.sum <- summary( a.2x2)\n\n#n2num\nf.n2n <- zapsmall( aov.sum[[3]][[1]][[\"F value\"]][1], digits = 4)\np.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#related\nf.rel <- zapsmall( aov.sum[[2]][[1]][[\"F value\"]][1], digits = 4)\np.rel <- zapsmall( aov.sum[[2]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rel <- zapsmall( aov.sum[[2]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X rel\nf.n2r <- zapsmall( aov.sum[[4]][[1]][[\"F value\"]][1], digits = 4)\np.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Mean Sq\"]][2], digits = 4)\n\n\nerror.rate.ANOVA.2 <- data.frame(\n  \n  Effect = c(\n    \"Local Noun Number\",\n    \"Related\",\n    \"Local Noun Number X Relatedness\"\n  ),\n  \n  F2    = c(\n    f.n2n,\n    f.rel,\n    f.n2r\n  ),\n  \n  MSe   =c(\n    paste( m.n2n,\" (\", get_stars( p.n2n), \")\", sep = \"\"),\n    paste( m.rel,\" (\", get_stars( p.rel), \")\", sep = \"\"),\n    paste( m.n2r,\" (\", get_stars( p.n2r), \")\", sep = \"\"))   \n)\n\n\nerror.rate.ANOVA <- cbind(error.rate.ANOVA.1,error.rate.ANOVA.2[,c(2:3)])\n\nwrite.xlsx(error.rate.ANOVA, file=\"output/table15_SR2_CAT_error_rate_anovas.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\n\n\n# -------------------- TABLE 16 SEMREL2: PROP ERROR RATE ANOVA RESULTS ------------\n# F1\nsource( file = \"clear_and_setup.R\")\nsource( file = \"semrel2_PROP_f1_ANOVAS_read_in_dataframe.R\")\n\n\na.2x3 <- aov(error ~ related * n2num + Error( subj / ( related * n2num)), data = data.subj)\nsink(\"output/table16_SR2_PROP_f1_anova.txt\")\ncat(\"Table 16: PROP F1 2 x 2 ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( summary( a.2x3), digits = 6)\nsink()\naov.sum <- summary( a.2x3)\n\n#n2num\nf.n2n <- zapsmall( aov.sum[[3]][[1]][[\"F value\"]][1], digits = 4)\np.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#rel\nf.rel <- zapsmall( aov.sum[[2]][[1]][[\"F value\"]][1], digits = 4)\np.rel <- zapsmall( aov.sum[[2]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rel <- zapsmall( aov.sum[[2]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X rel\nf.n2r <- zapsmall( aov.sum[[4]][[1]][[\"F value\"]][1], digits = 4)\np.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Mean Sq\"]][2], digits = 4)\n\nerror.rate.ANOVA.1 <- data.frame(\n  \n  Effect = c(\n    \"Local Noun Number\",\n    \"Related\",\n    \"Local Noun Number X Relatedness\"\n  ),\n  \n  F1    = c(\n    f.n2n,\n    f.rel,\n    f.n2r\n  ),\n  \n  MSe   =c(\n    paste( m.n2n,\" (\", get_stars( p.n2n),\")\", sep = \"\"),\n    paste( m.rel,\" (\", get_stars( p.rel),\")\", sep = \"\"),\n    paste( m.n2r,\" (\", get_stars( p.n2r),\")\", sep = \"\"))   \n)\n\n\n# F2\nsource( file = \"semrel2_PROP_f2_ANOVAS_read_in_dataframe.R\")\n\n\na.2x3 <- aov(error ~ related * n2num + Error(item / (related * n2num)), data = data.item)\nsink(\"output/table16_SR2_PROP_f2_anova.txt\")\ncat(\"Table 16: PROP F2 2 x 2 ANOVA\", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\nprint( summary( a.2x3), digits = 6)\nsink()\n\naov.sum <- summary( a.2x3)\n\n#n2num\nf.n2n <- zapsmall( aov.sum[[3]][[1]][[\"F value\"]][1], digits = 4)\np.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2n <- zapsmall( aov.sum[[3]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#related\nf.rel <- zapsmall( aov.sum[[2]][[1]][[\"F value\"]][1], digits = 4)\np.rel <- zapsmall( aov.sum[[2]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.rel <- zapsmall( aov.sum[[2]][[1]][[\"Mean Sq\"]][2], digits = 4)\n#n2n X rel\nf.n2r <- zapsmall( aov.sum[[4]][[1]][[\"F value\"]][1], digits = 4)\np.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Pr(>F)\"]][1],  digits = 4)\nm.n2r <- zapsmall( aov.sum[[4]][[1]][[\"Mean Sq\"]][2], digits = 4)\n\n\nerror.rate.ANOVA.2 <- data.frame(\n  \n  Effect = c(\n    \"Local Noun Number\",\n    \"Related\",\n    \"Local Noun Number X Relatedness\"\n  ),\n  \n  F2    = c(\n    f.n2n,\n    f.rel,\n    f.n2r\n  ),\n  \n  MSe   =c(\n    paste( m.n2n,\" (\", get_stars( p.n2n), \")\", sep = \"\"),\n    paste( m.rel,\" (\", get_stars( p.rel), \")\", sep = \"\"),\n    paste( m.n2r,\" (\", get_stars( p.n2r), \")\", sep = \"\"))   \n)\n\n\nerror.rate.ANOVA <- cbind(error.rate.ANOVA.1,error.rate.ANOVA.2[,c(2:3)])\n\nwrite.xlsx(error.rate.ANOVA, file=\"output/table16_SR2_PROP_error_rate_anovas.xlsx\", col.names = TRUE, row.names = TRUE, append = FALSE)\n\n\n# # -------------------- SEMREL: SET UP INPUT FILE( s) -----------------------------------\n# d.base           <- read.csv(\"data/allregdata.csv\")\n# names( d.base)[names( d.base) == 'LengthSylHead'] <- 'LengthSyll.Head'\n# names( d.base)[names( d.base) == 'LogFr.Head'] <- 'LogFreq.Head'\n# # -------------------- SEMREL: MAIN SUBSETS  ---------\n# d.sr            <- subset( d.base, exp == \"SemRel\")\n# d.sr$back.trans <- (( sin( d.sr$AssArc.H.L/2))^2)\n# d.sr$integrated <- as.factor( d.sr$integrated)\n# d.sr$related    <- as.factor( d.sr$related)\n# d.sr$related    <- droplevels( d.sr$rel)\n# d.sr$n2num      <- as.factor( d.sr$n2num)\n# d.sr$item       <- as.factor( d.sr$item)\n# line             = rep(c(\"-\"), times = 40, fill = 80)\n# br               = \"\\n\"\n# # -------------------- SEMREL: ADDITIONAL SUBSETTING -----------------\n# integ <- subset( d.sr, integrated   ==  \"integ\")\n# unint <- subset( d.sr, integrated   ==  \"unint\")\n# relat <- subset( d.sr, related  ==  \"rel\")\n# unrel <- subset( d.sr, related  ==  \"unrel\")\n# sing  <- subset( d.sr, n2num    ==  \"sing\")\n# plur  <- subset( d.sr, n2num    ==  \"plur\")\n# \n# #Below, additional subsetted groups\n# relat.int.plur   <- subset( d.sr, related     == \"rel\"   & integrated == \"integ\" & n2num == \"plur\")\n# relat.int.sing   <- subset( d.sr, related     == \"rel\"   & integrated == \"integ\" & n2num == \"sing\")\n# relat.unint.plur <- subset( d.sr, related     == \"rel\"   & integrated == \"unint\" & n2num == \"plur\")\n# relat.unint.sing <- subset( d.sr, related     == \"rel\"   & integrated == \"unint\" & n2num == \"sing\")\n# unrel.int.plur   <- subset( d.sr, related     == \"unrel\" & integrated == \"integ\" & n2num == \"plur\")\n# unrel.int.sing   <- subset( d.sr, related     == \"unrel\" & integrated == \"integ\" & n2num == \"sing\")\n# unrel.unint.plur <- subset( d.sr, related     == \"unrel\" & integrated == \"unint\" & n2num == \"plur\")\n# unrel.unint.sing <- subset( d.sr, related     == \"unrel\" & integrated == \"unint\" & n2num == \"sing\")\n# relat.plur       <- subset( d.sr, related     == \"rel\"   & n2num      == \"plur\")\n# relat.sing       <- subset( d.sr, related     == \"rel\"   & n2num      == \"sing\")\n# unrel.plur       <- subset( d.sr, related     == \"unrel\" & n2num      == \"plur\")\n# unrel.sing       <- subset( d.sr, related     == \"unrel\" & n2num      == \"sing\")\n# integ.plur       <- subset( d.sr, integrated  == \"integ\" & n2num      == \"plur\")\n# integ.sing       <- subset( d.sr, integrated  == \"integ\" & n2num      == \"sing\")\n# unint.plur       <- subset( d.sr, integrated  == \"unint\" & n2num      == \"plur\")\n# unint.sing       <- subset( d.sr, integrated  == \"unint\" & n2num      == \"sing\")\n# integ.relat      <- subset( d.sr, integrated  == \"integ\" & related    == \"rel\")\n# integ.unrel      <- subset( d.sr, integrated  == \"integ\" & related    == \"unrel\")\n# unint.relat      <- subset( d.sr, integrated  == \"unint\" & related    == \"rel\")\n# unint.unrel      <- subset( d.sr, integrated  == \"unint\" & related    == \"unrel\")\n\n# # -------------------- SEMREL: SET UP OUTPUT FILE\n# sink(\"output/norming/SEMREL norming.txt\")\n# cat(\"SEMREL NORMING \", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n# \n# \n# # -------------------- SEMREL: NUISANCE FACTORS\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** NUISANCE FACTORS **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- SEMREL: PREPOSITION -------------------------------------------------------\n# cat( br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PREPOSITION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.freq <- summary( aov(LogFreq.Prep ~ integrated + Error(item / integrated ), data = d.sr))\n# p <- zapsmall( aov.freq[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Preposition  = c(\"Integrated\",\"Unintegrated\",\"PVal\")\n# \n# prep.freq = data.frame(\n#   c(\n#     paste( round( mean( integ$LogFreq.Prep), 2), \" (\", round( sd( integ$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint$LogFreq.Prep), 2), \" (\", round( sd( unint$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( prep.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame( preposition, prep.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lc <- summary( aov(LengthChar.Prep ~ integrated + Error(item / integrated ), data = d.sr))\n# p <- zapsmall( aov.lc[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( integ$LengthChar.Prep), 2), \" (\", round( sd( integ$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint$LengthChar.Prep), 2), \" (\", round( sd( unint$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.ph <- summary( aov(LengthPhon.Prep ~ integrated + Error(item / integrated), data = d.sr))\n# p <- zapsmall( aov.ph[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( integ$LengthPhon.Prep), 2), \" (\", round( sd( integ$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint$LengthPhon.Prep), 2), \" (\", round( sd( unint$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.syl <- summary( aov(LengthSyll.Prep ~ integrated + Error(item / integrated), data = d.sr))\n# p <- zapsmall( aov.syl[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( integ$LengthSyll.Prep), 2), \" (\", round( sd( integ$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint$LengthSyll.Prep), 2), \" (\", round( sd( unint$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syl. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- SEMREL: ADJECTIVE -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ADJECTIVE\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.fra <- summary( aov(LogFreq.Adj ~ related + Error(item / related), data = d.sr))\n# p <- zapsmall( aov.fra[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Adjective  = c(\"Related\",\"Unrelated\", \"PVal\")\n# adj.freq = data.frame(\n#   c(\n#     paste( round( mean( relat$LogFreq.Adj), 2), \" (\", round( sd( relat$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Adj), 2), \" (\", round( sd( unrel$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( adj.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame( adjective, adj.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.cha <- summary( aov(LengthChar.Adj ~ related + Error(item / related), data = d.sr))\n# p <- zapsmall( aov.cha[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthChar.Adj), 2), \" (\", round( sd( relat$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Adj), 2), \" (\", round( sd( unrel$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.pha <- summary( aov(LengthPhon.Adj ~ related + Error(item / related ), data = d.sr))\n# p <- zapsmall( aov.pha[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthPhon.Adj), 2), \" (\", round( sd( relat$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Adj), 2), \" (\", round( sd( unrel$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.sya <- summary( aov(LengthSyll.Adj ~ related + Error(item / related ), data = d.sr))\n# p <- zapsmall( aov.sya[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthSyll.Adj), 2), \" (\", round( sd( relat$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Adj), 2), \" (\", round( sd( unrel$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- SEMREL: RELATED LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED LOCAL NOUN SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frsp <- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.frsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# RelatedLN  = c(\"Singular\",\"Plural\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LogFreq.N1), 2), \" (\", round( sd( relat.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LogFreq.N1), 2), \" (\", round( sd( relat.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(RelatedLN, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcsp <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.lcsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthChar.Noun), 2), \" (\", round( sd( relat.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LengthChar.Noun), 2), \" (\", round( sd( relat.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpsp <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.lpsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthPhon.Noun), 2), \" (\", round( sd( relat.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LengthPhon.Noun), 2), \" (\", round( sd( relat.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthSyll.Noun), 2), \" (\", round( sd( relat.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LengthSyll.Noun), 2), \" (\", round( sd( relat.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- SEMREL: UNRELATED LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED LOCAL NOUN SING. vs. PLUR.\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frsp <- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.frsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# UnrelatedLN  = c(\"Singular\",\"Plural\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LogFreq.N1), 2), \" (\", round( sd( unrel.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LogFreq.N1), 2), \" (\", round( sd( unrel.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(UnrelatedLN, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcsp <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.lcsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthChar.Noun), 2), \" (\", round( sd( unrel.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthChar.Noun), 2), \" (\", round( sd( unrel.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpsp <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.lpsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthPhon.Noun), 2), \" (\", round( sd( unrel.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthPhon.Noun), 2), \" (\", round( sd( unrel.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthSyll.Noun), 2), \" (\", round( sd( unrel.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthSyll.Noun), 2), \" (\", round( sd( unrel.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- SEMREL: RELATED vs UNRELATED SINGULAR LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs UNRELATED SINGULAR LOCAL NOUN\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frss <- summary( aov(LogFreq.N1 ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.frss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# LocalNoun  = c(\"Rel.Sing\",\"Unrel.Sing\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LogFreq.N1), 2), \" (\", round( sd( relat.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LogFreq.N1), 2), \" (\", round( sd( unrel.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(LocalNoun, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcss <- summary( aov(LengthChar.Noun ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.lcss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthChar.Noun), 2), \" (\", round( sd( relat.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LengthChar.Noun), 2), \" (\", round( sd( unrel.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpss <- summary( aov(LengthPhon.Noun ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.lpss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthPhon.Noun), 2), \" (\", round( sd( relat.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LengthPhon.Noun), 2), \" (\", round( sd( unrel.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthSyll.Noun), 2), \" (\", round( sd( relat.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LengthSyll.Noun), 2), \" (\", round( sd( unrel.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- SEMREL: RELATED vs UNRELATED PLURAL LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs UNRELATED PLURAL LOCAL NOUN\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frss <- summary( aov(LogFreq.N1 ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.frss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# LocalNoun  = c(\"Rel.Plur\",\"Unrel.Plur\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LogFreq.N1), 2), \" (\", round( sd( relat.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LogFreq.N1), 2), \" (\", round( sd( unrel.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(LocalNoun, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcss <- summary( aov(LengthChar.Noun ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.lcss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LengthChar.Noun), 2), \" (\", round( sd( relat.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthChar.Noun), 2), \" (\", round( sd( unrel.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpss <- summary( aov(LengthPhon.Noun ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.lpss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LengthPhon.Noun), 2), \" (\", round( sd( relat.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthPhon.Noun), 2), \" (\", round( sd( unrel.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LengthSyll.Noun), 2), \" (\", round( sd( relat.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthSyll.Noun), 2), \" (\", round( sd( unrel.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- SEMREL: 2 x 2 LOCAL NOUN ANOVAs -------------------------------------------------------\n# # ----------------------------- ::FREQUENCY------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA LOG FREQUENCY \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.fr22 <- summary( aov(LogFreq.N1 ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.sr))\n# p.rel <- zapsmall( aov.fr22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.freq.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LogFreq.N1), 2), \" (\", round( sd( relat$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.N1), 2), \" (\", round( sd( unrel$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.freq.rel)[1] <- \"Frequency\" \n# ds.rel <- cbind.data.frame(Condition, noun.freq.rel)\n# \n# \n# p.num <- zapsmall( aov.fr22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.freq.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LogFreq.N1), 2), \" (\", round( sd( sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LogFreq.N1), 2), \" (\", round( sd( plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.freq.num)[1] <- \"Frequency\" \n# ds.num <- cbind.data.frame(Condition, noun.freq.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# # ----------------------------- ::CHAR.LENGTH------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA CHARACTER LENGTH \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.cl22 <- summary( aov(LengthChar.Noun ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.sr))\n# p.rel <- zapsmall( aov.cl22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.char.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthChar.Noun), 2), \" (\", round( sd( relat$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Noun), 2), \" (\", round( sd( unrel$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.char.rel)[1] <- \"Char. Length\" \n# ds.rel <- cbind.data.frame(Condition, noun.char.rel)\n# \n# \n# p.num <- zapsmall( aov.cl22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.char.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LengthChar.Noun), 2), \" (\", round( sd( sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LengthChar.Noun), 2), \" (\", round( sd( plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.char.num)[1] <- \"Char. Length\" \n# ds.num <- cbind.data.frame(Condition, noun.char.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# # ----------------------------- ::PHON.LENGTH------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA PHONEME LENGTH \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.pl22 <- summary( aov(LengthPhon.Noun ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.sr))\n# p.rel <- zapsmall( aov.pl22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.phon.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthPhon.Noun), 2), \" (\", round( sd( relat$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Noun), 2), \" (\", round( sd( unrel$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.phon.rel)[1] <- \"Phon. Length\" \n# ds.rel <- cbind.data.frame(Condition, noun.phon.rel)\n# \n# \n# p.num <- zapsmall( aov.pl22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.phon.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LengthPhon.Noun), 2), \" (\", round( sd( sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LengthPhon.Noun), 2), \" (\", round( sd( plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.phon.num)[1] <- \"Phon. Length\" \n# ds.num <- cbind.data.frame(Condition, noun.phon.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# # ----------------------------- ::SYLL.LENGTH------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA SYLLABLE LENGTH \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.sl22 <- summary( aov(LengthSyll.Noun ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.sr))\n# p.rel <- zapsmall( aov.sl22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.phon.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthSyll.Noun), 2), \" (\", round( sd( relat$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Noun), 2), \" (\", round( sd( unrel$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.phon.rel)[1] <- \"Syll. Length\" \n# ds.rel <- cbind.data.frame(Condition, noun.phon.rel)\n# \n# \n# p.num <- zapsmall( aov.sl22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.phon.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LengthSyll.Noun), 2), \" (\", round( sd( sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LengthSyll.Noun), 2), \" (\", round( sd( plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.phon.num)[1] <- \"Syll. Length\" \n# ds.num <- cbind.data.frame(Condition, noun.phon.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# \n# # -------------------- SEMREL:  2 x 2 ANOVA RELATEDNESS -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 ANOVA RELATEDNESS\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# rel22 <- summary( aov(RelatedHL ~ related * n2num + Error(item / related * n2num), data = d.sr))\n# print(rel22)\n# # -------------------- SEMREL: RELATEDNESS RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.rel <- summary( aov(RelatedHL ~ related + Error(item / related), data = d.sr))\n# p <- zapsmall( aov.rel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Mean Related\", \"Mean Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$RelatedHL), 2), \" (\", round( sd( relat$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$RelatedHL), 2), \" (\", round( sd( unrel$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"Relatedness\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- SEMREL: RELATEDNESS SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$RelatedHL), 2), \" (\", round( sd( relat.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$RelatedHL), 2), \" (\", round( sd( relat.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Related\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Unrelated\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- SEMREL: RELATEDNESS SING vs. UNRELATEDNESS SING -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov(RelatedHL ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Related.Sing\",\"Unrelated.Sing\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$RelatedHL), 2), \" (\", round( sd( relat.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Total\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # -------------------- SEMREL: RELATEDNESS PLUR vs. UNRELATEDNESS PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov(RelatedHL ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$RelatedHL), 2), \" (\", round( sd( relat.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Total\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# \n# # -------------------- SEMREL: INTEGRATION NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** SEMANTIC INTEGRATION **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- SEMREL:  2 x 2 x 2 ANOVA INTEGRATION -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 x 2 ANOVA INTEGRATION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# int222 <- summary( aov(Integrated ~ integrated * related * n2num + Error(item / integrated * related * n2num), data = d.sr))\n# print(int222)\n# # -------------------- SEMREL: INTEGRATED vs. UNINTEGRATED -------------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED vs. UNINTEGRATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunint <- summary( aov(Integrated ~ integrated + Error(item / integrated), data = d.sr))\n# p <- zapsmall( aov.intunint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integrated  = c(\"Integrated\",\"Unintegrated\", \"PVal\")\n# intunint = data.frame(\n#   c(\n#     paste( round( mean( integ$Integrated), 2), \" (\", round( sd( integ$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint$Integrated), 2), \" (\", round( sd( unint$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunint)[1] <- \"Total\" \n# intunint.means <- cbind.data.frame(Integrated, intunint)\n# \n# print(intunint.means)\n# # -------------------- SEMREL: RELATED vs. UNRELATED -------------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunint <- summary( aov(Integrated ~ related + Error(item / related), data = d.sr))\n# p <- zapsmall( aov.intunint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$Integrated), 2), \" (\", round( sd( relat$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Integrated), 2), \" (\", round( sd( unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"Total\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- SEMREL: INTEGRATED RELATED vs. UNITEGRATED RELATED ------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Related vs. UNINTEGRATED Related\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relrel <- summary( aov(Integrated ~ integrated + Error(item / integrated), data = relat))\n# p <- zapsmall( aov.relrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integrated  = c(\"Integrated.Rel\",\"Unintegrated.Rel\", \"PVal\")\n# relrel = data.frame(\n#   c(\n#     paste( round( mean( integ.relat$Integrated), 2), \" (\", round( sd( integ.relat$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.relat$Integrated), 2), \" (\", round( sd( unint.relat$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relrel)[1] <- \"Total\" \n# relrel.means <- cbind.data.frame(Integrated, relrel)\n# \n# print(relrel.means)\n# # -------------------- SEMREL: INTEGRATED UNRELATED vs. UNITEGRATED UNRELATED ------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Unrelated vs. UNINTEGRATED Unrelated\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unrelunrel <- summary( aov(Integrated ~ integrated + Error(item / integrated), data = unrel))\n# p <- zapsmall( aov.unrelunrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integrated  = c(\"Integrated.Unrel\",\"Unintegrated.Unrel\", \"PVal\")\n# unrelunrel = data.frame(\n#   c(\n#     paste( round( mean( integ.unrel$Integrated), 2), \" (\", round( sd( integ.unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.unrel$Integrated), 2), \" (\", round( sd( unint.unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelunrel)[1] <- \"Total\" \n# unrelunrel.means <- cbind.data.frame(Integrated, unrelunrel)\n# \n# print(unrelunrel.means)\n# # -------------------- SEMREL: INTEGRATED Related vs. Unrelated -------------------------------------------------------\n# # ----------------------------- ::INT RELATED vs UNRELATED------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Related vs. Unrelated\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intrel <- summary( aov(Integrated ~ related + Error(item / related), data = integ))\n# p <- zapsmall( aov.intrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# intrel = data.frame(\n#   c(\n#     paste( round( mean( integ.relat$Integrated), 2), \" (\", round( sd( integ.relat$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( integ.unrel$Integrated), 2), \" (\", round( sd( integ.unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intrel)[1] <- \"Relat\" \n# intrel.means <- cbind.data.frame(Relatedness, intrel)\n# \n# print(intrel.means)\n# # ----------------------------- ::UNINT RELATED vs UNRELATED------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNINTEGRATED Related vs. Unrelated\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unintrel <- summary( aov(Integrated ~ related + Error(item / related), data = unint))\n# p <- zapsmall( aov.unintrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# unintrel = data.frame(\n#   c(\n#     paste( round( mean( unint.relat$Integrated), 2), \" (\", round( sd( unint.relat$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.unrel$Integrated), 2), \" (\", round( sd( unint.unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintrel)[1] <- \"Relat\" \n# unintrel.means <- cbind.data.frame(Relatedness, unintrel)\n# \n# print(unintrel.means)\n# # -------------------- SEMREL: INTEGRATED SING vs. UNINTEGRATED SING -------------------------------------------------------\n# # ----------------------------- ::INT. SING vs UNINT. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED SING vs. UNINTEGRATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Int.Sing\",\"Unint.Sing\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( integ.sing$RelatedHL), 2), \" (\", round( sd( integ.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.sing$RelatedHL), 2), \" (\", round( sd( unint.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Total\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # -------------------- SEMREL: INTEGRATION PLUR vs. UNINTEGRATED PLUR -------------------------------------------------------\n# # ----------------------------- ::INT. PLUR vs UNINT. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED PLUR vs. UNINTEGRATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( integ.plur$RelatedHL), 2), \" (\", round( sd( integ.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.plur$RelatedHL), 2), \" (\", round( sd( unint.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Total\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- SEMREL: INTEGRATED Related SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Related SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intrelsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = integ.relat))\n# p <- zapsmall( aov.intrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.int.sing$Integrated), 2), \" (\", round( sd( relat.int.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.int.plur$Integrated), 2), \" (\", round( sd( relat.int.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intrelsp)[1] <- \"Integrated.Related\" \n# intrelsp.means <- cbind.data.frame(N2Num, intrelsp)\n# \n# print(intrelsp.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Unrelated SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.intunrelsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = integ.unrel))\n# p <- zapsmall( aov.intunrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intunrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.int.sing$Integrated), 2), \" (\", round( sd( unrel.int.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.int.plur$Integrated), 2), \" (\", round( sd( unrel.int.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunrelsp)[1] <- \"Integrated.Unrelated\" \n# intunrelsp.means <- cbind.data.frame(N2Num, intunrelsp)\n# \n# print(intunrelsp.means)\n# # -------------------- SEMREL: INTEGRATED Related SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Related SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intrelsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = integ.relat))\n# p <- zapsmall( aov.intrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.int.sing$Integrated), 2), \" (\", round( sd( relat.int.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.int.plur$Integrated), 2), \" (\", round( sd( relat.int.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intrelsp)[1] <- \"Integrated.Related\" \n# intrelsp.means <- cbind.data.frame(N2Num, intrelsp)\n# \n# print(intrelsp.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Unrelated SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.intunrelsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = integ.unrel))\n# p <- zapsmall( aov.intunrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intunrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.int.sing$Integrated), 2), \" (\", round( sd( unrel.int.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.int.plur$Integrated), 2), \" (\", round( sd( unrel.int.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunrelsp)[1] <- \"Integrated.Unrelated\" \n# intunrelsp.means <- cbind.data.frame(N2Num, intunrelsp)\n# \n# print(intunrelsp.means)\n# # -------------------- SEMREL: UNINTEGRATED Related SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNINTEGRATED Related SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unintrelsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = unint.relat))\n# p <- zapsmall( aov.unintrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unintrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.unint.sing$Integrated), 2), \" (\", round( sd( relat.unint.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.unint.plur$Integrated), 2), \" (\", round( sd( relat.unint.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintrelsp)[1] <- \"Unintegrated.Related\" \n# unintrelsp.means <- cbind.data.frame(N2Num, unintrelsp)\n# \n# print(unintrelsp.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED Unrelated SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unintunrelsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = unint.unrel))\n# p <- zapsmall( aov.unintunrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unintunrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.unint.sing$Integrated), 2), \" (\", round( sd( unrel.unint.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.unint.plur$Integrated), 2), \" (\", round( sd( unrel.unint.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintunrelsp)[1] <- \"Integrated.Unrelated\" \n# unintunrelsp.means <- cbind.data.frame(N2Num, unintunrelsp)\n# \n# print(unintunrelsp.means)\n# # -------------------- SEMREL: INTEGRATED SING/PLUR vs. UNINTEGRATED SING/PLUR -----------------------------------------------\n# # ----------------------------- ::INTEGRATED SING vs UNINTEGRATED SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED SING vs. UNINTEGRATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.sings <- summary( aov(Integrated ~ integrated + Error(item / integrated), data = sing))\n# p <- zapsmall( aov.sings[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integ  = c(\"Integ.Sing\",\"Unint.Sing\", \"PVal\")\n# intunintss = data.frame(\n#   c(\n#     paste( round( mean( integ.sing$Integrated), 2), \" (\", round( sd( integ.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.sing$Integrated), 2), \" (\", round( sd( unint.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintss)[1] <- \"Total\" \n# intunintss.means <- cbind.data.frame(Integ, intunintss)\n# \n# print(intunintss.means)\n# # ----------------------------- ::INTEGRATED PLUR vs UNINTEGRATED PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED PLUR vs. UNINTEGRATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.plurs <- summary( aov(Integrated ~ integrated + Error(item / integrated), data = plur))\n# p <- zapsmall( aov.plurs[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integ  = c(\"Integ.Plur\",\"Unint.Plur\", \"PVal\")\n# intunintpp = data.frame(\n#   c(\n#     paste( round( mean( integ.plur$Integrated), 2), \" (\", round( sd( integ.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.plur$Integrated), 2), \" (\", round( sd( unint.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintpp)[1] <- \"Total\" \n# intunintpp.means <- cbind.data.frame(Integ, intunintpp)\n# \n# print(intunintpp.means)\n# \n# # -------------------- SEMREL: ASSOCIATION NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** ASSOCIATION **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- SEMREL:  2 x 2 ANOVA ASSOCIATION -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 ANOVA ASSOCIATION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# ass22 <- summary( aov( assArc.H.L ~ related * n2num + Error(item / related * n2num), data = d.sr))\n# print( ass22)\n# # -------------------- SEMREL: ASSOCIATED RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION: RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.ass <- summary( aov( assArc.H.L ~ related + Error(item / related), data = d.sr))\n# p <- zapsmall( aov.ass[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Mean Related\", \"Mean Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$AssArc.H.L), 2), \" (\", round( sd( relat$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$AssArc.H.L), 2), \" (\", round( sd( unrel$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"AssArc HL\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- SEMREL: ASSOCIATED SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION: RELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$AssArc.H.L), 2), \" (\", round( sd( relat.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$AssArc.H.L), 2), \" (\", round( sd( relat.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"AssArc HL\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION: UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$AssArc.H.L), 2), \" (\", round( sd( unrel.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$AssArc.H.L), 2), \" (\", round( sd( unrel.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"AssArc HL\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- SEMREL: ASSOCIATED: REL SING vs. ASSOCIATED: UNREL SING -----------------------------------------------\n# # ----------------------------- ::ASS.REL. SING vs ASS. UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATED RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov( assArc.H.L ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Related.Sing\",\"Unrelated.Sing\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$AssArc.H.L), 2), \" (\", round( sd( relat.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$AssArc.H.L), 2), \" (\", round( sd( unrel.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Total\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # -------------------- SEMREL: ASSOCIATED: REL. PLUR vs. ASSOCIATED: REL PLUR ------------------------------------------------\n# # ----------------------------- ::ASS.REL. PLUR vs ASS.UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov( assArc.H.L ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$AssArc.H.L), 2), \" (\", round( sd( relat.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$AssArc.H.L), 2), \" (\", round( sd( unrel.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Total\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- SEMREL: PLAUSIBILITY NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** PLAUSIBILITY  **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- SEMREL:  2 x 2 x 2 ANOVA PLAUSIBILITY -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 x 2 ANOVA PLAUSIBILITY\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# int222 <- summary( aov( plausibility ~ integrated * related * n2num + Error(item / integrated * related * n2num), data = d.sr))\n# print(int222)\n# \n# # -------------------- SEMREL: PLAUS: INTEGRATED vs. UNINTEGRATED -------------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED vs. UNINTEGRATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunint <- summary( aov( plausibility ~ integrated + Error(item / integrated), data = d.sr))\n# p <- zapsmall( aov.intunint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Plausibility  = c(\"Integrated\",\"Unintegrated\", \"PVal\")\n# intunint = data.frame(\n#   c(\n#     paste( round( mean( integ$Plausibility), 2), \" (\", round( sd( integ$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint$Plausibility), 2), \" (\", round( sd( unint$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunint)[1] <- \"Plaus.Total\" \n# intunint.means <- cbind.data.frame( plausibility, intunint)\n# \n# print(intunint.means)\n# # -------------------- SEMREL: PLAUS: RELATED vs. UNRELATED -------------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunint <- summary( aov( plausibility ~ related + Error(item / related), data = d.sr))\n# p <- zapsmall( aov.intunint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$Plausibility), 2), \" (\", round( sd( relat$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Plausibility), 2), \" (\", round( sd( unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"Plaus.Total\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- SEMREL: PLAUS: INTEGRATED RELATED vs. UNITEGRATED RELATED ------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED Related vs. UNINTEGRATED Related\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relrel <- summary( aov( plausibility ~ integrated + Error(item / integrated), data = relat))\n# p <- zapsmall( aov.relrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Plausibility  = c(\"Integrated.Rel\",\"Unintegrated.Rel\", \"PVal\")\n# relrel = data.frame(\n#   c(\n#     paste( round( mean( integ.relat$Plausibility), 2), \" (\", round( sd( integ.relat$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.relat$Plausibility), 2), \" (\", round( sd( unint.relat$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relrel)[1] <- \"Plaus. Total\" \n# relrel.means <- cbind.data.frame( plausibility, relrel)\n# \n# print(relrel.means)\n# # -------------------- SEMREL: PLAUS: INTEGRATED UNRELATED vs. UNITEGRATED UNRELATED ------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED Unrelated vs. UNINTEGRATED Unrelated\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unrelunrel <- summary( aov( plausibility ~ integrated + Error(item / integrated), data = unrel))\n# p <- zapsmall( aov.unrelunrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Plausibility  = c(\"Integrated.Unrel\",\"Unintegrated.Unrel\", \"PVal\")\n# unrelunrel = data.frame(\n#   c(\n#     paste( round( mean( integ.unrel$Plausibility), 2), \" (\", round( sd( integ.unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.unrel$Plausibility), 2), \" (\", round( sd( unint.unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelunrel)[1] <- \"Plaus: Total\" \n# unrelunrel.means <- cbind.data.frame( plausibility, unrelunrel)\n# \n# print(unrelunrel.means)\n# # -------------------- SEMREL: PLAUS: INTEGRATED Related vs. Unrelated -------------------------------------------------------\n# # ----------------------------- ::INT RELATED vs UNRELATED------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED Related vs. Unrelated\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intrel <- summary( aov( plausibility ~ related + Error(item / related), data = integ))\n# p <- zapsmall( aov.intrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# intrel = data.frame(\n#   c(\n#     paste( round( mean( integ.relat$Plausibility), 2), \" (\", round( sd( integ.relat$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( integ.unrel$Plausibility), 2), \" (\", round( sd( integ.unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intrel)[1] <- \"Plaus. Total\" \n# intrel.means <- cbind.data.frame(Relatedness, intrel)\n# \n# print(intrel.means)\n# # ----------------------------- ::UNINT RELATED vs UNRELATED------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\" PLAUS: UNINTEGRATED Related vs. Unrelated\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unintrel <- summary( aov( plausibility ~ related + Error(item / related), data = unint))\n# p <- zapsmall( aov.unintrel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# unintrel = data.frame(\n#   c(\n#     paste( round( mean( unint.relat$Plausibility), 2), \" (\", round( sd( unint.relat$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.unrel$Plausibility), 2), \" (\", round( sd( unint.unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintrel)[1] <- \"Plaus. Total\" \n# unintrel.means <- cbind.data.frame(Relatedness, unintrel)\n# \n# print(unintrel.means)\n# # -------------------- SEMREL: PLAUS: INTEGRATED Related SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED Related SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intrelsp <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = integ.relat))\n# p <- zapsmall( aov.intrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.int.sing$Plausibility), 2), \" (\", round( sd( relat.int.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.int.plur$Plausibility), 2), \" (\", round( sd( relat.int.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intrelsp)[1] <- \"Plaus. Total\" \n# intrelsp.means <- cbind.data.frame(N2Num, intrelsp)\n# \n# print(intrelsp.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED Unrelated SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.intunrelsp <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = integ.unrel))\n# p <- zapsmall( aov.intunrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intunrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.int.sing$Plausibility), 2), \" (\", round( sd( unrel.int.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.int.plur$Plausibility), 2), \" (\", round( sd( unrel.int.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunrelsp)[1] <- \"Plaus. Total\" \n# intunrelsp.means <- cbind.data.frame(N2Num, intunrelsp)\n# \n# print(intunrelsp.means)\n# # -------------------- SEMREL: PLAUS: UNINTEGRATED Related SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: UNINTEGRATED Related SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unintrelsp <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = unint.relat))\n# p <- zapsmall( aov.unintrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unintrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.unint.sing$Plausibility), 2), \" (\", round( sd( relat.unint.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.unint.plur$Plausibility), 2), \" (\", round( sd( relat.unint.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintrelsp)[1] <- \"PLAUS. TOTAL\" \n# unintrelsp.means <- cbind.data.frame(N2Num, unintrelsp)\n# \n# print(unintrelsp.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED Unrelated SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unintunrelsp <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = unint.unrel))\n# p <- zapsmall( aov.unintunrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unintunrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.unint.sing$Plausibility), 2), \" (\", round( sd( unrel.unint.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.unint.plur$Plausibility), 2), \" (\", round( sd( unrel.unint.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintunrelsp)[1] <- \"Plaus. Total\" \n# unintunrelsp.means <- cbind.data.frame(N2Num, unintunrelsp)\n# \n# print(unintunrelsp.means)\n# # -------------------- SEMREL: PLAUS:INTEGRATED SING/PLUR vs. UNINTEGRATED SING/PLUR -----------------------------------------\n# # ----------------------------- ::INTEGRATED SING vs UNINTEGRATED SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED SING vs. UNINTEGRATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.sings <- summary( aov( plausibility ~ integrated + Error(item / integrated), data = sing))\n# p <- zapsmall( aov.sings[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integ  = c(\"Integ.Sing\",\"Unint.Sing\", \"PVal\")\n# intunintss = data.frame(\n#   c(\n#     paste( round( mean( integ.sing$Plausibility), 2), \" (\", round( sd( integ.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.sing$Plausibility), 2), \" (\", round( sd( unint.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintss)[1] <- \"Plaus. Total\" \n# intunintss.means <- cbind.data.frame(Integ, intunintss)\n# \n# print(intunintss.means)\n# # ----------------------------- ::INTEGRATED PLUR vs UNINTEGRATED PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED PLUR vs. UNINTEGRATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.plurs <- summary( aov( plausibility ~ integrated + Error(item / integrated), data = plur))\n# p <- zapsmall( aov.plurs[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Integ  = c(\"Integ.Plur\",\"Unint.Plur\", \"PVal\")\n# intunintpp = data.frame(\n#   c(\n#     paste( round( mean( integ.plur$Plausibility), 2), \" (\", round( sd( integ.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unint.plur$Plausibility), 2), \" (\", round( sd( unint.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintpp)[1] <- \"Plaus. Total\" \n# intunintpp.means <- cbind.data.frame(Integ, intunintpp)\n# \n# print(intunintpp.means)\n# # -------------------- SEMREL: PLAUS:RELATED SING/PLUR vs. UNRELATED SING/PLUR -----------------------------------------\n# # ----------------------------- ::RELATED SING vs UNRELATED SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.sings <- summary( aov( plausibility ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.sings[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Rel.Sing\",\"Unrel..Sing\", \"PVal\")\n# relunrelss = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$Plausibility), 2), \" (\", round( sd( relat.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Plausibility), 2), \" (\", round( sd( unrel.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrelss)[1] <- \"Plaus. Total\" \n# relunrelss.means <- cbind.data.frame(Relatedness, relunrelss)\n# \n# print(relunrelss.means)\n# # ----------------------------- ::RELATED PLUR vs UNRELATED PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: INTEGRATED PLUR vs. UNINTEGRATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.plurs <- summary( aov( plausibility ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.plurs[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Rel.\",\"Unrel.Plur\", \"PVal\")\n# relunrelpp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$Plausibility), 2), \" (\", round( sd( relat.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Plausibility), 2), \" (\", round( sd( unrel.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrelpp)[1] <- \"Plaus. Total\" \n# relunrelpp.means <- cbind.data.frame(Relatedness, relunrelpp)\n# \n# print(relunrelpp.means)\n# \n# sink()\n# # ===============================================================================================\n# # ===============================================================================================\n# rm(list = ls()) \n# # -------------------- CAT CORD: SET UP INPUT FILE( s) -----------------------------------\n# d.base           <- read.csv(\"data/allregdata.csv\")\n# names( d.base)[names( d.base) == 'LengthSylHead'] <- 'LengthSyll.Head'\n# names( d.base)[names( d.base) == 'LogFr.Head'] <- 'LogFreq.Head'\n# # -------------------- CAT CORD: SUBSETS  ---------\n# d.cat            <- subset( d.base, exp == \"Cat\")\n# d.cat$integrated <- as.factor( d.cat$integrated)\n# d.cat$related    <- as.factor( d.cat$related)\n# d.cat$related    <- droplevels( d.cat$rel)\n# d.cat$n2num      <- as.factor( d.cat$n2num)\n# d.cat$item       <- as.factor( d.cat$item)\n# line             = rep(c(\"-\"), times = 40, fill = 80)\n# br               = \"\\n\"\n# \n# \n# # Below, designates various subsets of the original data file\n# integ <- subset( d.cat, integrated   ==  \"integ\")\n# unint <- subset( d.cat, integrated   ==  \"unint\")\n# relat <- subset( d.cat, related      ==  \"rel\")\n# unrel <- subset( d.cat, related      ==  \"unrel\")\n# sing  <- subset( d.cat, n2num        ==  \"sing\")\n# plur  <- subset( d.cat, n2num        ==  \"plur\")\n# \n# #Below, additional subsetted groups\n# relat.int.plur   <- subset( d.cat, related     == \"rel\"   & integrated == \"integ\" & n2num == \"plur\")\n# relat.int.sing   <- subset( d.cat, related     == \"rel\"   & integrated == \"integ\" & n2num == \"sing\")\n# relat.unint.plur <- subset( d.cat, related     == \"rel\"   & integrated == \"unint\" & n2num == \"plur\")\n# relat.unint.sing <- subset( d.cat, related     == \"rel\"   & integrated == \"unint\" & n2num == \"sing\")\n# unrel.int.plur   <- subset( d.cat, related     == \"unrel\" & integrated == \"integ\" & n2num == \"plur\")\n# unrel.int.sing   <- subset( d.cat, related     == \"unrel\" & integrated == \"integ\" & n2num == \"sing\")\n# unrel.unint.plur <- subset( d.cat, related     == \"unrel\" & integrated == \"unint\" & n2num == \"plur\")\n# unrel.unint.sing <- subset( d.cat, related     == \"unrel\" & integrated == \"unint\" & n2num == \"sing\")\n# relat.plur       <- subset( d.cat, related     == \"rel\"   & n2num      == \"plur\")\n# relat.sing       <- subset( d.cat, related     == \"rel\"   & n2num      == \"sing\")\n# unrel.plur       <- subset( d.cat, related     == \"unrel\" & n2num      == \"plur\")\n# unrel.sing       <- subset( d.cat, related     == \"unrel\" & n2num      == \"sing\")\n# integ.plur       <- subset( d.cat, integrated  == \"integ\" & n2num      == \"plur\")\n# integ.sing       <- subset( d.cat, integrated  == \"integ\" & n2num      == \"sing\")\n# unint.plur       <- subset( d.cat, integrated  == \"unint\" & n2num      == \"plur\")\n# unint.sing       <- subset( d.cat, integrated  == \"unint\" & n2num      == \"sing\")\n# integ.relat      <- subset( d.cat, integrated  == \"integ\" & related    == \"rel\")\n# integ.unrel      <- subset( d.cat, integrated  == \"integ\" & related    == \"unrel\")\n# unint.relat      <- subset( d.cat, integrated  == \"unint\" & related    == \"rel\")\n# unint.unrel      <- subset( d.cat, integrated  == \"unint\" & related    == \"unrel\")\n# \n# get_stars = function( p) {\n#   stars = findInterval( p, c(0, 0.001, 0.01, 0.05, 0.1))\n#   codes = c(\"***\" , \"**\",\"*\", \".\", \" \")\n#   codes[stars]\n# }\n# options( scipen=1)\n# \n# # ---------------------- CAT: SET UP OUTPUT FILE\n# \n# sink(\"output/norming/CATEGORY_COORD norming.txt\")\n# cat(\"CATEGORY_COORD NORMING \", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n# cat(rep(c(\"*\"), times = 25, quote = F), br, br)\n# \n# \n# # -------------------- CAT CORD: NUISANCE FACTORS\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** NUISANCE FACTORS **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- CAT CORD: PREPOSITION -------------------------------------------------------\n# cat( br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PREPOSITION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.freq <- summary( aov(LogFreq.Prep ~ related + Error(item / related ), data = d.cat))\n# p <- zapsmall( aov.freq[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# pval <- data.frame(\n#   PVal = c( p, get_stars( p))\n# )\n# \n# Preposition  = c(\"Related\",\"Unrelated\",\"PVal\")\n# \n# prep.freq = data.frame(\n#   c(\n#     paste( round( mean( relat$LogFreq.Prep), 2), \" (\", round( sd( relat$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Prep), 2), \" (\", round( sd( unrel$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( prep.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame( preposition, prep.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lc <- summary( aov(LengthChar.Prep ~ related + Error(item / related ), data = d.cat))\n# p <- zapsmall( aov.lc[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthChar.Prep), 2), \" (\", round( sd( relat$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Prep), 2), \" (\", round( sd( unrel$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.ph <- summary( aov(LengthPhon.Prep ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.ph[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthPhon.Prep), 2), \" (\", round( sd( relat$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Prep), 2), \" (\", round( sd( unrel$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.syl <- summary( aov(LengthSyll.Prep ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.syl[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthSyll.Prep), 2), \" (\", round( sd( relat$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Prep), 2), \" (\", round( sd( unrel$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syl. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- CAT CORD: ADJECTIVE -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ADJECTIVE\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.fra <- summary( aov(LogFreq.Adj ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.fra[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Adjective  = c(\"Related\",\"Unrelated\", \"PVal\")\n# adj.freq = data.frame(\n#   c(\n#     paste( round( mean( relat$LogFreq.Adj), 2), \" (\", round( sd( relat$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Adj), 2), \" (\", round( sd( unrel$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( adj.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame( adjective, adj.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.cha <- summary( aov(LengthChar.Adj ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.cha[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthChar.Adj), 2), \" (\", round( sd( relat$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Adj), 2), \" (\", round( sd( unrel$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.pha <- summary( aov(LengthPhon.Adj ~ related + Error(item / related ), data = d.cat))\n# p <- zapsmall( aov.pha[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthPhon.Adj), 2), \" (\", round( sd( relat$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Adj), 2), \" (\", round( sd( unrel$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.sya <- summary( aov(LengthSyll.Adj ~ related + Error(item / related ), data = d.cat))\n# p <- zapsmall( aov.sya[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthSyll.Adj), 2), \" (\", round( sd( relat$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Adj), 2), \" (\", round( sd( unrel$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- CAT CORD: RELATED LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED LOCAL NOUN SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frsp <- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.frsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# RelatedLN  = c(\"Singular\",\"Plural\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LogFreq.N1), 2), \" (\", round( sd( relat.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LogFreq.N1), 2), \" (\", round( sd( relat.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(RelatedLN, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcsp <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.lcsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthChar.Noun), 2), \" (\", round( sd( relat.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LengthChar.Noun), 2), \" (\", round( sd( relat.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpsp <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.lpsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthPhon.Noun), 2), \" (\", round( sd( relat.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LengthPhon.Noun), 2), \" (\", round( sd( relat.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthSyll.Noun), 2), \" (\", round( sd( relat.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$LengthSyll.Noun), 2), \" (\", round( sd( relat.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- CAT CORD: UNRELATED LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED LOCAL NOUN SING. vs. PLUR.\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frsp <- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.frsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# UnrelatedLN  = c(\"Singular\",\"Plural\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LogFreq.N1), 2), \" (\", round( sd( unrel.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LogFreq.N1), 2), \" (\", round( sd( unrel.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(UnrelatedLN, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcsp <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.lcsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthChar.Noun), 2), \" (\", round( sd( unrel.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthChar.Noun), 2), \" (\", round( sd( unrel.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpsp <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.lpsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthPhon.Noun), 2), \" (\", round( sd( unrel.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthPhon.Noun), 2), \" (\", round( sd( unrel.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthSyll.Noun), 2), \" (\", round( sd( unrel.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthSyll.Noun), 2), \" (\", round( sd( unrel.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- CAT CORD: RELATED vs UNRELATED SINGULAR LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs UNRELATED SINGULAR LOCAL NOUN\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frss <- summary( aov(LogFreq.N1 ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.frss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# LocalNoun  = c(\"Rel.Sing\",\"Unrel.Sing\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LogFreq.N1), 2), \" (\", round( sd( relat.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LogFreq.N1), 2), \" (\", round( sd( unrel.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(LocalNoun, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcss <- summary( aov(LengthChar.Noun ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.lcss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthChar.Noun), 2), \" (\", round( sd( relat.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LengthChar.Noun), 2), \" (\", round( sd( unrel.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpss <- summary( aov(LengthPhon.Noun ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.lpss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthPhon.Noun), 2), \" (\", round( sd( relat.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LengthPhon.Noun), 2), \" (\", round( sd( unrel.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$LengthSyll.Noun), 2), \" (\", round( sd( relat.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$LengthSyll.Noun), 2), \" (\", round( sd( unrel.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- CAT CORD: RELATED vs UNRELATED PLURAL LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs UNRELATED PLURAL LOCAL NOUN\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov.frss <- summary( aov(LogFreq.N1 ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.frss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# LocalNoun  = c(\"Rel.Plur\",\"Unrel.Plur\", \"PVal\")\n# noun.freq = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LogFreq.N1), 2), \" (\", round( sd( relat.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LogFreq.N1), 2), \" (\", round( sd( unrel.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(noun.freq)[1] <- \"Frequency\" \n# freq.means <- cbind.data.frame(LocalNoun, noun.freq)\n# # ----------------------------- ::CHAR. LENGTH------------\n# aov.lcss <- summary( aov(LengthChar.Noun ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.lcss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# char.len = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LengthChar.Noun), 2), \" (\", round( sd( relat.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthChar.Noun), 2), \" (\", round( sd( unrel.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(char.len)[1] <- \"Char. Length\" \n# freq.means <- cbind.data.frame(freq.means, char.len)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov.lpss <- summary( aov(LengthPhon.Noun ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.lpss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# phon.len = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LengthPhon.Noun), 2), \" (\", round( sd( relat.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthPhon.Noun), 2), \" (\", round( sd( unrel.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( phon.len)[1] <- \"Phon. Length\" \n# freq.means <- cbind.data.frame(freq.means, phon.len)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov.lssp <- summary( aov(LengthSyll.Noun ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.lssp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# syll.len = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$LengthSyll.Noun), 2), \" (\", round( sd( relat.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthSyll.Noun), 2), \" (\", round( sd( unrel.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( syll.len)[1] <- \"Syll. Length\" \n# freq.means <- cbind.data.frame(freq.means, syll.len)\n# print(freq.means)\n# # -------------------- CAT CORD: 2 x 2 LOCAL NOUN ANOVAs -------------------------------------------------------\n# # ----------------------------- ::FREQUENCY------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA LOG FREQUENCY \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.fr22 <- summary( aov(LogFreq.N1 ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.cat))\n# p.rel <- zapsmall( aov.fr22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.freq.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LogFreq.N1), 2), \" (\", round( sd( relat$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.N1), 2), \" (\", round( sd( unrel$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.freq.rel)[1] <- \"Frequency\" \n# ds.rel <- cbind.data.frame(Condition, noun.freq.rel)\n# \n# \n# p.num <- zapsmall( aov.fr22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.freq.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LogFreq.N1), 2), \" (\", round( sd( sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LogFreq.N1), 2), \" (\", round( sd( plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.freq.num)[1] <- \"Frequency\" \n# ds.num <- cbind.data.frame(Condition, noun.freq.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# # ----------------------------- ::CHAR.LENGTH------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA CHARACTER LENGTH \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.cl22 <- summary( aov(LengthChar.Noun ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.cat))\n# p.rel <- zapsmall( aov.cl22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.char.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthChar.Noun), 2), \" (\", round( sd( relat$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Noun), 2), \" (\", round( sd( unrel$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.char.rel)[1] <- \"Char. Length\" \n# ds.rel <- cbind.data.frame(Condition, noun.char.rel)\n# \n# \n# p.num <- zapsmall( aov.cl22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.char.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LengthChar.Noun), 2), \" (\", round( sd( sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LengthChar.Noun), 2), \" (\", round( sd( plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.char.num)[1] <- \"Char. Length\" \n# ds.num <- cbind.data.frame(Condition, noun.char.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# # ----------------------------- ::PHON.LENGTH------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA PHONEME LENGTH \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.pl22 <- summary( aov(LengthPhon.Noun ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.cat))\n# p.rel <- zapsmall( aov.pl22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.phon.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthPhon.Noun), 2), \" (\", round( sd( relat$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Noun), 2), \" (\", round( sd( unrel$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.phon.rel)[1] <- \"Phon. Length\" \n# ds.rel <- cbind.data.frame(Condition, noun.phon.rel)\n# \n# \n# p.num <- zapsmall( aov.pl22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.phon.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LengthPhon.Noun), 2), \" (\", round( sd( sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LengthPhon.Noun), 2), \" (\", round( sd( plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.phon.num)[1] <- \"Phon. Length\" \n# ds.num <- cbind.data.frame(Condition, noun.phon.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# # ----------------------------- ::SYLL.LENGTH------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2x2 ANOVA SYLLABLE LENGTH \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.sl22 <- summary( aov(LengthSyll.Noun ~ (related + n2num)^2 + Error(item / (related * n2num)), data = d.cat))\n# p.rel <- zapsmall( aov.sl22[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Related\",\"Unrelelated\",\"PVal\")\n# noun.phon.rel = data.frame(\n#   c(\n#     paste( round( mean( relat$LengthSyll.Noun), 2), \" (\", round( sd( relat$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Noun), 2), \" (\", round( sd( unrel$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.rel, 3), get_stars( p.rel))\n#   ))\n# colnames(noun.phon.rel)[1] <- \"Syll. Length\" \n# ds.rel <- cbind.data.frame(Condition, noun.phon.rel)\n# \n# \n# p.num <- zapsmall( aov.sl22[[3]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# Condition  = c(\"Singular\",\"Plural\",\"PVal\")\n# noun.phon.num = data.frame(\n#   c(\n#     paste( round( mean( sing$LengthSyll.Noun), 2), \" (\", round( sd( sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( plur$LengthSyll.Noun), 2), \" (\", round( sd( plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p.num, 3), get_stars( p.num))\n#   ))\n# colnames(noun.phon.num)[1] <- \"Syll. Length\" \n# ds.num <- cbind.data.frame(Condition, noun.phon.num)\n# \n# ds <- rbind( ds.rel, ds.num)\n# print( ds)\n# \n# # -------------------- CAT CORD: RELATEDNESS NORMING-----------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** RELATEDNESS  **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- CAT CORD:  2 x 2 ANOVA RELATEDNESS -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 ANOVA RELATEDNESS\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# rel22 <- summary( aov(RelatedHL ~ related * n2num + Error(item / related * n2num), data = d.cat))\n# print(rel22)\n# # -------------------- CAT CORD: RELATEDNESS RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.rel <- summary( aov(RelatedHL ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.rel[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Mean Related\", \"Mean Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$RelatedHL), 2), \" (\", round( sd( relat$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$RelatedHL), 2), \" (\", round( sd( unrel$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"Relatedness\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- CAT CORD: RELATEDNESS SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$RelatedHL), 2), \" (\", round( sd( relat.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$RelatedHL), 2), \" (\", round( sd( relat.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Related\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Unrelated\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- CAT CORD: RELATEDNESS SING vs. UNRELATEDNESS SING -------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov(RelatedHL ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Related.Sing\",\"Unrelated.Sing\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$RelatedHL), 2), \" (\", round( sd( relat.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Total\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # -------------------- CAT CORD: RELATEDNESS PLUR vs. UNRELATEDNESS PLUR -----------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov(RelatedHL ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$RelatedHL), 2), \" (\", round( sd( relat.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Total\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# \n# # -------------------- CAT CORD: INTEGRATION NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** SEMANTIC INTEGRATION **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- CAT CORD:  2 x 2 ANOVA INTEGRATION -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 ANOVA INTEGRATION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# int22 <- summary( aov(Integrated ~  related * n2num + Error(item /  related * n2num), data = d.cat))\n# print(int22)\n# # -------------------- CAT CORD: INT: RELATED vs. UNRELATED -------------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INT: RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunint <- summary( aov(Integrated ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.intunint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$Integrated), 2), \" (\", round( sd( relat$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Integrated), 2), \" (\", round( sd( unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"Total\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- CAT CORD: INTEGRATION REL. SING vs. REL. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INT. REL SING vs. REL. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.intsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intsp)[1] <- \"Integrated\" \n# int.means <- cbind.data.frame(N2Num, intsp)\n# \n# print(int.means)\n# # ----------------------------- ::UNREL SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INT. UNREL SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.unintsp <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unintsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unintsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unintsp)[1] <- \"Integrated\" \n# unint.means <- cbind.data.frame(N2Num, unintsp)\n# \n# print(unint.means)\n# # -------------------- CAT CORD: RELATED SING/PLUR vs. UNRELATED SING/PLUR -------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INT: RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunintss <- summary( aov(Integrated ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.intunintss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Related.Sing\",\"Unrelated.Sing\", \"PVal\")\n# intunintss = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$Integrated), 2), \" (\", round( sd( relat.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintss)[1] <- \"Total\" \n# intunintss.means <- cbind.data.frame(N2Num, intunintss)\n# \n# print(intunintss.means)\n# # -------------------- CAT CORD: INTEGRATED PLUR vs. UNINTEGRATED PLUR -------------------------------------------------------\n# # ----------------------------- ::INT. PLUR vs UINT. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INT: RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.intunintpp <- summary( aov(Integrated ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.intunintpp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intunintpp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$Integrated), 2), \" (\", round( sd( relat.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintpp)[1] <- \"Total\" \n# intunintpp.means <- cbind.data.frame(N2Num, intunintpp)\n# \n# print(intunintpp.means)\n# \n# # -------------------- CAT CORD: ASSOCIATION NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** ASSOCIATION **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- CAT CORD:  2 x 2 ANOVA ASSOCIATION -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 ANOVA ASSOCIATION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# ass22 <- summary( aov( assArc.H.L ~ related * n2num + Error(item / related * n2num), data = d.cat))\n# print( ass22)\n# # -------------------- CAT CORD: ASSOCIATED RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION: RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.ass <- summary( aov( assArc.H.L ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.ass[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Mean Related\", \"Mean Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$AssArc.H.L), 2), \" (\", round( sd( relat$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$AssArc.H.L), 2), \" (\", round( sd( unrel$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"AssArc HL\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- CAT CORD: ASSOCIATED SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION: RELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$AssArc.H.L), 2), \" (\", round( sd( relat.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$AssArc.H.L), 2), \" (\", round( sd( relat.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"AssArc HL\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION: UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$AssArc.H.L), 2), \" (\", round( sd( unrel.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$AssArc.H.L), 2), \" (\", round( sd( unrel.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"AssArc HL\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- CAT CORD: ASSOCIATED: REL SING vs. UNREL SING -------------------------------------------------\n# # ----------------------------- ::REL SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATED: REL SING vs. UNREL SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunintss <- summary( aov(Integrated ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.intunintss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Related.Sing\",\"Unrelated.Sing\", \"PVal\")\n# intunintss = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$Integrated), 2), \" (\", round( sd( relat.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintss)[1] <- \"Total\" \n# intunintss.means <- cbind.data.frame(N2Num, intunintss)\n# \n# print(intunintss.means)\n# # -------------------- CAT CORD: ASSOCIATED: REL PLUR vs. UNREL PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATED: REL PLUR vs. UNREL PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.intunintpp <- summary( aov(Integrated ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.intunintpp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intunintpp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$Integrated), 2), \" (\", round( sd( relat.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintpp)[1] <- \"Total\" \n# intunintpp.means <- cbind.data.frame(N2Num, intunintpp)\n# \n# print(intunintpp.means)\n# \n# # -------------------- CAT CORD: PLAUSIBILITY NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** PLAUSIBILITY  **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # -------------------- CAT CORD:  2 x 2 x 2 ANOVA PLAUSIBILITY -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 2 ANOVA PLAUSIBILITY\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# plaus22 <- summary( aov( plausibility ~   related * n2num + Error(item /  related * n2num), data = d.cat))\n# print( plaus22)\n# # -------------------- CAT CORD: PLAUS: RELATED vs. UNRELATED -------------------------------------------------------\n# \n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunint <- summary( aov( plausibility ~ related + Error(item / related), data = d.cat))\n# p <- zapsmall( aov.intunint[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Relatedness  = c(\"Related\",\"Unrelated\", \"PVal\")\n# relunrel = data.frame(\n#   c(\n#     paste( round( mean( relat$Plausibility), 2), \" (\", round( sd( relat$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Plausibility), 2), \" (\", round( sd( unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relunrel)[1] <- \"Plaus.Total\" \n# relunrel.means <- cbind.data.frame(Relatedness, relunrel)\n# \n# print(relunrel.means)\n# # -------------------- CAT CORD: PLAUS: SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: RELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.relsp <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = relat))\n# p <- zapsmall( aov.relsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# relsp = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$Plausibility), 2), \" (\", round( sd( relat.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( relat.plur$Plausibility), 2), \" (\", round( sd( relat.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(relsp)[1] <- \"Plaus. Total\" \n# rel.means <- cbind.data.frame(N2Num, relsp)\n# \n# print(rel.means)\n# # ----------------------------- ::UNREL. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.unrelsp <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov.unrelsp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# unrelsp = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$Plausibility), 2), \" (\", round( sd( unrel.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Plausibility), 2), \" (\", round( sd( unrel.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(unrelsp)[1] <- \"Plaus. Total\" \n# unrel.means <- cbind.data.frame(N2Num, unrelsp)\n# \n# print(unrel.means)\n# # -------------------- CAT CORD: PLAUS: REL SING vs. UNREL SING -------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: REL SING vs. UNREL SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov.intunintss <- summary( aov( plausibility ~ related + Error(item / related), data = sing))\n# p <- zapsmall( aov.intunintss[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Related.Sing\",\"Unrelated.Sing\", \"PVal\")\n# intunintss = data.frame(\n#   c(\n#     paste( round( mean( relat.sing$Integrated), 2), \" (\", round( sd( relat.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintss)[1] <- \"Plaus. Total\" \n# intunintss.means <- cbind.data.frame(N2Num, intunintss)\n# \n# print(intunintss.means)\n# # -------------------- CAT CORD: PLAUS: REL PLUR vs. UNREL PLUR -------------------------------------------------------\n# # ----------------------------- ::INT. PLUR vs UINT. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUS: REL PLUR vs. UNREL PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov.intunintpp <- summary( aov( plausibility ~ related + Error(item / related), data = plur))\n# p <- zapsmall( aov.intunintpp[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# N2Num  = c(\"Singular\",\"Plural\", \"PVal\")\n# intunintpp = data.frame(\n#   c(\n#     paste( round( mean( relat.plur$Plausibility), 2), \" (\", round( sd( relat.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Plausibility), 2), \" (\", round( sd( unrel.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames(intunintpp)[1] <- \"Plaus. Total\" \n# intunintpp.means <- cbind.data.frame(N2Num, intunintpp)\n# \n# print(intunintpp.means)\n# \n# sink()\n# \n# # ==================================================================================================\n# rm(list = ls()) # clears environment\n# library(languageR) # calls languageR library\n# get_stars = function( p) {\n#   stars = findInterval( p, c(0, 0.001, 0.01, 0.05, 0.1))\n#   codes = c(\"***\" , \"**\",\"*\", \".\", \" \")\n#   codes[stars]\n# }\n# options( scipen=1)\n# \n# # ---------------------- PROP: SET UP INPUT FILE( s) -----------------------------------\n# d.base           <- read.csv(\"data/allregdata.csv\")\n# names( d.base)[names( d.base) == 'LengthSylHead'] <- 'LengthSyll.Head'\n# names( d.base)[names( d.base) == 'LogFr.Head'] <- 'LogFreq.Head'\n# # ---------------------- PROP: SUBSETS  ---------\n# d.prop            <- subset( d.base, exp == \"Prop\")\n# d.prop$integrated <- as.factor( d.prop$integrated)\n# d.prop$related    <- as.factor( d.prop$related)\n# d.prop$related    <- droplevels( d.prop$rel)\n# d.prop$n2num      <- as.factor( d.prop$n2num)\n# d.prop$item       <- as.factor( d.prop$item)\n# line             = rep(c(\"-\"), times = 40, fill = 80)\n# br               = \"\\n\"\n# \n# \n# # Below, designates various subsets of the original data file\n# \n# attrb <- subset( d.prop, related      == \"rel\")\n# assoc <- subset( d.prop, related      == \"assoc\")\n# unrel <- subset( d.prop, related      == \"unrel\")\n# sing  <- subset( d.prop, n2num        == \"sing\")\n# plur  <- subset( d.prop, n2num        == \"plur\")\n# \n# #Below, additional subsetted groups\n# \n# attrb.assoc      <- subset( d.prop, related     != \"unrel\")\n# attrb.assoc.plur <- subset( d.prop, related     != \"unrel\" & n2num == \"plur\")\n# attrb.assoc.sing <- subset( d.prop, related     != \"unrel\" & n2num == \"sing\")\n# attrb.unrel      <- subset( d.prop, related     != \"assoc\")\n# attrb.unrel.plur <- subset( d.prop, related     != \"assoc\" & n2num == \"plur\")\n# attrb.unrel.sing <- subset( d.prop, related     != \"assoc\" & n2num == \"sing\")\n# assoc.unrel      <- subset( d.prop, related     != \"rel\")\n# assoc.unrel.plur <- subset( d.prop, related     != \"rel\" & n2num == \"plur\")\n# assoc.unrel.sing <- subset( d.prop, related     != \"rel\" & n2num == \"sing\")\n# attrb.plur       <- subset( d.prop, related     == \"rel\"   & n2num   == \"plur\")\n# attrb.sing       <- subset( d.prop, related     == \"rel\"   & n2num   == \"sing\")\n# assoc.plur       <- subset( d.prop, related     == \"assoc\" & n2num   == \"plur\")\n# assoc.sing       <- subset( d.prop, related     == \"assoc\" & n2num   == \"sing\")\n# unrel.plur       <- subset( d.prop, related     == \"unrel\" & n2num   == \"plur\")\n# unrel.sing       <- subset( d.prop, related     == \"unrel\" & n2num   == \"sing\")\n# \n# \n# \n# # --------------------- PROP: SET UP OUTPUT FILE\n# \n# sink(\"output/norming/PROP norming.txt\")\n# cat(\"PROPERTY NORMING \", format( Sys.time(), \"%b. %d, %Y at %T\"), sep = \"\", fill = 80)\n# cat(rep(c(\"*\"), times = 25, quote = F), br)\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** NUISANCE FACTORS **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# \n# # ---------------------- PROP: PREPOSITION -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PREPOSITION\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# \n# aov1<- summary( aov(LogFreq.Prep ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes\",\"Unrelated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LogFreq.Prep), 2), \" (\", round( sd( attrb$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Prep), 2), \" (\", round( sd( unrel$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means1 <- cbind.data.frame(Condition,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LogFreq.Prep ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes\",\"Associated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LogFreq.Prep), 2), \" (\", round( sd( attrb$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LogFreq.Prep), 2), \" (\", round( sd( assoc$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means2 <- cbind.data.frame(Condition, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LogFreq.Prep ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated\",\"Unrel\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LogFreq.Prep), 2), \" (\", round( sd( assoc$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Prep), 2), \" (\", round( sd( unrel$LogFreq.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means3 <- cbind.data.frame(Condition, ds)\n# # ----------------------------- ::CHAR. LENGTH------------\n# \n# aov1 <- summary( aov(LengthChar.Prep ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthChar.Prep), 2), \" (\", round( sd( attrb$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Prep), 2), \" (\", round( sd( unrel$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LengthChar.Prep ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthChar.Prep), 2), \" (\", round( sd( attrb$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LengthChar.Prep), 2), \" (\", round( sd( assoc$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LengthChar.Prep ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LengthChar.Prep), 2), \" (\", round( sd( assoc$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Prep), 2), \" (\", round( sd( unrel$LengthChar.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# # ----------------------------- ::PHON. LENGTH------------\n# # ----------------------------- ::PHON. LENGTH------------\n# aov1 <- summary( aov(LengthPhon.Prep ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthPhon.Prep), 2), \" (\", round( sd( attrb$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Prep), 2), \" (\", round( sd( unrel$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LengthPhon.Prep ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthPhon.Prep), 2), \" (\", round( sd( attrb$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LengthPhon.Prep), 2), \" (\", round( sd( assoc$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LengthPhon.Prep ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LengthPhon.Prep), 2), \" (\", round( sd( assoc$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Prep), 2), \" (\", round( sd( unrel$LengthPhon.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov1 <- summary( aov(LengthSyll.Prep ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthSyll.Prep), 2), \" (\", round( sd( attrb$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Prep), 2), \" (\", round( sd( unrel$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# print( means1)\n# ###\n# \n# aov2 <- summary( aov(LengthSyll.Prep ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthSyll.Prep), 2), \" (\", round( sd( attrb$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LengthSyll.Prep), 2), \" (\", round( sd( assoc$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# print( means2)\n# ###\n# \n# aov3 <- summary( aov(LengthSyll.Prep ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LengthSyll.Prep), 2), \" (\", round( sd( assoc$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Prep), 2), \" (\", round( sd( unrel$LengthSyll.Prep), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# print( means3)\n# # ----------------------PROP: ADJECTIVE -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ADJECTIVE\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov1<- summary( aov(LogFreq.Adj ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes\",\"Unrelated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LogFreq.Adj), 2), \" (\", round( sd( attrb$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Adj), 2), \" (\", round( sd( unrel$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means1 <- cbind.data.frame(Condition,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LogFreq.Adj ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes\",\"Associated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LogFreq.Adj), 2), \" (\", round( sd( attrb$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LogFreq.Adj), 2), \" (\", round( sd( assoc$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means2 <- cbind.data.frame(Condition, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LogFreq.Adj ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated\",\"Unrel\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LogFreq.Adj), 2), \" (\", round( sd( assoc$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LogFreq.Adj), 2), \" (\", round( sd( unrel$LogFreq.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means3 <- cbind.data.frame(Condition, ds)\n# # ----------------------------- ::CHAR. LENGTH------------\n# \n# aov1 <- summary( aov(LengthChar.Adj ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthChar.Adj), 2), \" (\", round( sd( attrb$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Adj), 2), \" (\", round( sd( unrel$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LengthChar.Adj ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthChar.Adj), 2), \" (\", round( sd( attrb$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LengthChar.Adj), 2), \" (\", round( sd( assoc$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LengthChar.Adj ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LengthChar.Adj), 2), \" (\", round( sd( assoc$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthChar.Adj), 2), \" (\", round( sd( unrel$LengthChar.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov1 <- summary( aov(LengthPhon.Adj ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthPhon.Adj), 2), \" (\", round( sd( attrb$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Adj), 2), \" (\", round( sd( unrel$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LengthPhon.Adj ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthPhon.Adj), 2), \" (\", round( sd( attrb$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LengthPhon.Adj), 2), \" (\", round( sd( assoc$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LengthPhon.Adj ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LengthPhon.Adj), 2), \" (\", round( sd( assoc$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthPhon.Adj), 2), \" (\", round( sd( unrel$LengthPhon.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov1 <- summary( aov(LengthSyll.Adj ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthSyll.Adj), 2), \" (\", round( sd( attrb$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Adj), 2), \" (\", round( sd( unrel$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# print( means1)\n# ###\n# \n# aov2 <- summary( aov(LengthSyll.Adj ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$LengthSyll.Adj), 2), \" (\", round( sd( attrb$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$LengthSyll.Adj), 2), \" (\", round( sd( assoc$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# print( means2)\n# ###\n# \n# aov3 <- summary( aov(LengthSyll.Adj ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$LengthSyll.Adj), 2), \" (\", round( sd( assoc$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$LengthSyll.Adj), 2), \" (\", round( sd( unrel$LengthSyll.Adj), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# print( means3)\n# # ----------------------PROP: LOCAL NOUN -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"LOCAL NOUN SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# # ----------------------------- ::FREQUENCY------------\n# aov1<- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num ), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attrib.Sing\",\"Attrib.Plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$LogFreq.N1), 2), \" (\", round( sd( attrb.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$LogFreq.N1), 2), \" (\", round( sd( attrb.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means1 <- cbind.data.frame(Condition,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num ), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Assoc.Sing\",\"Assoc.Plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$LogFreq.N1), 2), \" (\", round( sd( assoc.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$LogFreq.N1), 2), \" (\", round( sd( assoc.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means2 <- cbind.data.frame(Condition, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LogFreq.N1 ~ n2num + Error(item / n2num ), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Unrel.Sing\",\"Unrel.Plur\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LogFreq.N1), 2), \" (\", round( sd( unrel.sing$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LogFreq.N1), 2), \" (\", round( sd( unrel.plur$LogFreq.N1), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Frequency\" \n# means3 <- cbind.data.frame(Condition, ds)\n# # ----------------------------- ::CHAR. LENGTH------------\n# \n# aov1 <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num ), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$LengthChar.Noun), 2), \" (\", round( sd( attrb.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$LengthChar.Noun), 2), \" (\", round( sd( attrb.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num ), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$LengthChar.Noun), 2), \" (\", round( sd( assoc.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$LengthChar.Noun), 2), \" (\", round( sd( assoc.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LengthChar.Noun ~ n2num + Error(item / n2num ), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthChar.Noun), 2), \" (\", round( sd( unrel.sing$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthChar.Noun), 2), \" (\", round( sd( unrel.plur$LengthChar.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Char. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# # ----------------------------- ::PHON. LENGTH------------\n# aov1 <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num ), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$LengthPhon.Noun), 2), \" (\", round( sd( attrb.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$LengthPhon.Noun), 2), \" (\", round( sd( attrb.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# \n# ###\n# \n# aov2 <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num ), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$LengthPhon.Noun), 2), \" (\", round( sd( assoc.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$LengthPhon.Noun), 2), \" (\", round( sd( assoc.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# \n# ###\n# \n# aov3 <- summary( aov(LengthPhon.Noun ~ n2num + Error(item / n2num ), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthPhon.Noun), 2), \" (\", round( sd( unrel.sing$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthPhon.Noun), 2), \" (\", round( sd( unrel.plur$LengthPhon.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Phon. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# # ----------------------------- ::SYLL. LENGTH------------\n# aov1 <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num ), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$LengthSyll.Noun), 2), \" (\", round( sd( attrb.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$LengthSyll.Noun), 2), \" (\", round( sd( attrb.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means1 <- cbind.data.frame( means1,ds)\n# print( means1)\n# ###\n# \n# aov2 <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num ), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$LengthSyll.Noun), 2), \" (\", round( sd( assoc.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$LengthSyll.Noun), 2), \" (\", round( sd( assoc.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means2 <- cbind.data.frame( means2, ds)\n# print( means2)\n# ###\n# \n# aov3 <- summary( aov(LengthSyll.Noun ~ n2num + Error(item / n2num ), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$LengthSyll.Noun), 2), \" (\", round( sd( unrel.sing$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$LengthSyll.Noun), 2), \" (\", round( sd( unrel.plur$LengthSyll.Noun), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Syll. Length\" \n# means3 <- cbind.data.frame( means3, ds)\n# print( means3)\n# \n# # --------------------- PROP: RELATEDNESS NORMING----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** RELATEDNESS FACTORS **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # --------------------- PROP:  2 x 3 ANOVA RELATEDNESS -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"2 X 3 ANOVA RELATEDNESS\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# rel22 <- summary( aov(RelatedHL ~ related * n2num + Error(item / related * n2num), data = d.prop))\n# print(rel22)\n# # --------------------- PROP: RELATEDNESS RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED vs. UNRELATED\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov(RelatedHL ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes\",\"Unrelated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$RelatedHL), 2), \" (\", round( sd( attrb$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$RelatedHL), 2), \" (\", round( sd( unrel$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov(RelatedHL ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes\",\"Associated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$RelatedHL), 2), \" (\", round( sd( attrb$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$RelatedHL), 2), \" (\", round( sd( assoc$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov(RelatedHL ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated\",\"Unrel\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$RelatedHL), 2), \" (\", round( sd( assoc$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$RelatedHL), 2), \" (\", round( sd( unrel$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: RELATEDNESS SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::ATTRB. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ATTRIBUTE SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov1 <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$RelatedHL), 2), \" (\", round( sd( attrb.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$RelatedHL), 2), \" (\", round( sd( attrb.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition, ds)\n# print( means1)\n# # ----------------------------- ::ASSOC. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# aov2 <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$RelatedHL), 2), \" (\", round( sd( assoc.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$RelatedHL), 2), \" (\", round( sd( assoc.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# # ----------------------------- ::UNRELATED SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov3 <- summary( aov(RelatedHL ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: RELATEDNESS SING vs. UNRELATEDNESS SING -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov(RelatedHL ~ related + Error(item / related ), data = attrb.unrel.sing))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.sing\",\"Unrelated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$RelatedHL), 2), \" (\", round( sd( attrb.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov(RelatedHL ~ related + Error(item / related ), data = attrb.assoc.sing))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.sing\",\"Associated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$RelatedHL), 2), \" (\", round( sd( attrb.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.sing$RelatedHL), 2), \" (\", round( sd( assoc.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov(RelatedHL ~ related + Error(item / related ), data = assoc.unrel.sing))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.sing\",\"Unrelated.sing\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$RelatedHL), 2), \" (\", round( sd( assoc.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$RelatedHL), 2), \" (\", round( sd( unrel.sing$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: RELATEDNESS PLUR vs. UNRELATEDNESS PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov(RelatedHL ~ related + Error(item / related ), data = attrb.unrel.plur))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.plur\",\"Unrelated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$RelatedHL), 2), \" (\", round( sd( attrb.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov(RelatedHL ~ related + Error(item / related ), data = attrb.assoc.plur))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.plur\",\"Associated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$RelatedHL), 2), \" (\", round( sd( attrb.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$RelatedHL), 2), \" (\", round( sd( assoc.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov(RelatedHL ~ related + Error(item / related ), data = assoc.unrel.plur))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.plur\",\"Unrelated.plur\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.plur$RelatedHL), 2), \" (\", round( sd( assoc.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$RelatedHL), 2), \" (\", round( sd( unrel.plur$RelatedHL), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# \n# # --------------------- PROP: INTEGRATION NORMING ----------------------------------------------------\n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** INTEGRATION FACTORS **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # --------------------- PROP: INTEGRATION RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"INTEGRATED RELATED vs. UNRELATED \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov(Integrated ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes\",\"Unrelated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$Integrated), 2), \" (\", round( sd( attrb$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Integrated), 2), \" (\", round( sd( unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov(Integrated ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes\",\"Associated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$Integrated), 2), \" (\", round( sd( attrb$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$Integrated), 2), \" (\", round( sd( assoc$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov(Integrated ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated\",\"Unrel\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$Integrated), 2), \" (\", round( sd( assoc$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Integrated), 2), \" (\", round( sd( unrel$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: INTEGRATION SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::ATTRB. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ATTRIBUTE SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov1 <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$Integrated), 2), \" (\", round( sd( attrb.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$Integrated), 2), \" (\", round( sd( attrb.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition, ds)\n# print( means1)\n# # ----------------------------- ::ASSOC. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# aov2 <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$Integrated), 2), \" (\", round( sd( assoc.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$Integrated), 2), \" (\", round( sd( assoc.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# # ----------------------------- ::UNRELATED SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov3 <- summary( aov(Integrated ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: INTEGRATION SING vs.  SING -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov(Integrated ~ related + Error(item / related ), data = attrb.unrel.sing))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.sing\",\"Unrelated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$Integrated), 2), \" (\", round( sd( attrb.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov(Integrated ~ related + Error(item / related ), data = attrb.assoc.sing))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.sing\",\"Associated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$Integrated), 2), \" (\", round( sd( attrb.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.sing$Integrated), 2), \" (\", round( sd( assoc.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov(Integrated ~ related + Error(item / related ), data = assoc.unrel.sing))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.sing\",\"Unrelated.sing\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$Integrated), 2), \" (\", round( sd( assoc.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Integrated), 2), \" (\", round( sd( unrel.sing$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: INTEGRATION PLUR vs.  PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov(Integrated ~ related + Error(item / related ), data = attrb.unrel.plur))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.plur\",\"Unrelated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$Integrated), 2), \" (\", round( sd( attrb.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov(Integrated ~ related + Error(item / related ), data = attrb.assoc.plur))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.plur\",\"Associated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$Integrated), 2), \" (\", round( sd( attrb.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$Integrated), 2), \" (\", round( sd( assoc.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov(Integrated ~ related + Error(item / related ), data = assoc.unrel.plur))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.plur\",\"Unrelated.plur\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.plur$Integrated), 2), \" (\", round( sd( assoc.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Integrated), 2), \" (\", round( sd( unrel.plur$Integrated), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# \n# # --------------------- PROP: ASSOCIATION NORMING ----------------------------------------------------\n# \n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** ASSOCIATION NORMING **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # --------------------- PROP: ASSOCIATION RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\" RELATED vs. UNRELATED \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov( assArc.H.L ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes\",\"Unrelated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$AssArc.H.L), 2), \" (\", round( sd( attrb$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$AssArc.H.L), 2), \" (\", round( sd( unrel$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov( assArc.H.L ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes\",\"Associated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$AssArc.H.L), 2), \" (\", round( sd( attrb$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$AssArc.H.L), 2), \" (\", round( sd( assoc$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov( assArc.H.L ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated\",\"Unrel\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$AssArc.H.L), 2), \" (\", round( sd( assoc$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$AssArc.H.L), 2), \" (\", round( sd( unrel$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: ASSOCIATION SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::ATTRB. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ATTRIBUTE SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov1 <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$AssArc.H.L), 2), \" (\", round( sd( attrb.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$AssArc.H.L), 2), \" (\", round( sd( attrb.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition, ds)\n# print( means1)\n# # ----------------------------- ::ASSOC. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ASSOCIATION SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# aov2 <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$AssArc.H.L), 2), \" (\", round( sd( assoc.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$AssArc.H.L), 2), \" (\", round( sd( assoc.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# # ----------------------------- ::UNRELATED SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov3 <- summary( aov( assArc.H.L ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$AssArc.H.L), 2), \" (\", round( sd( unrel.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$AssArc.H.L), 2), \" (\", round( sd( unrel.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: ASSOCIATION SING vs.  SING -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov( assArc.H.L ~ related + Error(item / related ), data = attrb.unrel.sing))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.sing\",\"Unrelated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$AssArc.H.L), 2), \" (\", round( sd( attrb.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$AssArc.H.L), 2), \" (\", round( sd( unrel.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov( assArc.H.L ~ related + Error(item / related ), data = attrb.assoc.sing))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.sing\",\"Associated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$AssArc.H.L), 2), \" (\", round( sd( attrb.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.sing$AssArc.H.L), 2), \" (\", round( sd( assoc.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov( assArc.H.L ~ related + Error(item / related ), data = assoc.unrel.sing))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.sing\",\"Unrelated.sing\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$AssArc.H.L), 2), \" (\", round( sd( assoc.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$AssArc.H.L), 2), \" (\", round( sd( unrel.sing$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: ASSOCIATION PLUR vs.  PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov( assArc.H.L ~ related + Error(item / related ), data = attrb.unrel.plur))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.plur\",\"Unrelated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$AssArc.H.L), 2), \" (\", round( sd( attrb.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$AssArc.H.L), 2), \" (\", round( sd( unrel.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov( assArc.H.L ~ related + Error(item / related ), data = attrb.assoc.plur))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.plur\",\"Associated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$AssArc.H.L), 2), \" (\", round( sd( attrb.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$AssArc.H.L), 2), \" (\", round( sd( assoc.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov( assArc.H.L ~ related + Error(item / related ), data = assoc.unrel.plur))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.plur\",\"Unrelated.plur\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.plur$AssArc.H.L), 2), \" (\", round( sd( assoc.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$AssArc.H.L), 2), \" (\", round( sd( unrel.plur$AssArc.H.L), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# \n# # --------------------- PROP: PLAUSIBILTY NORMING ----------------------------------------------------\n# \n# cat( br, rep(c(\"_\"), times = 50, quote = F), br)\n# cat( \"*********************************** PLAUSIBILITY NORMING **************************\", sep = \"\")\n# cat( br, rep(c(\"-\"), times = 50, quote = F), br)\n# # --------------------- PROP: PLAUSIBILITY RELATED  vs. UNRELATED -------------------------------------------------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\" RELATED vs. UNRELATED \", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov( plausibility ~ related + Error(item / related ), data = attrb.unrel))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes\",\"Unrelated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$Plausibility), 2), \" (\", round( sd( attrb$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Plausibility), 2), \" (\", round( sd( unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov( plausibility ~ related + Error(item / related ), data = attrb.assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes\",\"Associated\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb$Plausibility), 2), \" (\", round( sd( attrb$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc$Plausibility), 2), \" (\", round( sd( assoc$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov( plausibility ~ related + Error(item / related ), data = assoc.unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated\",\"Unrel\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc$Plausibility), 2), \" (\", round( sd( assoc$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel$Plausibility), 2), \" (\", round( sd( unrel$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: PLAUSIBILITY SING vs. PLUR -------------------------------------------------------\n# # ----------------------------- ::ATTRB. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"ATTRIBUTE SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# aov1 <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = attrb))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$Plausibility), 2), \" (\", round( sd( attrb.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( attrb.plur$Plausibility), 2), \" (\", round( sd( attrb.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition, ds)\n# print( means1)\n# # ----------------------------- ::ASSOC. SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"PLAUSIBILITY SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# aov2 <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = assoc))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$Plausibility), 2), \" (\", round( sd( assoc.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$Plausibility), 2), \" (\", round( sd( assoc.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# # ----------------------------- ::UNRELATED SING vs PLUR------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"UNRELATED SING vs. PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov3 <- summary( aov( plausibility ~ n2num + Error(item / n2num), data = unrel))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Singular\",\"Plural\", \"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( unrel.sing$Plausibility), 2), \" (\", round( sd( unrel.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Plausibility), 2), \" (\", round( sd( unrel.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: PLAUSIBILITY SING vs.  SING -------------------------------------------------------\n# # ----------------------------- ::REL. SING vs UNREL. SING------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED SING vs. UNRELATED SING\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov( plausibility ~ related + Error(item / related ), data = attrb.unrel.sing))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.sing\",\"Unrelated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$Plausibility), 2), \" (\", round( sd( attrb.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Plausibility), 2), \" (\", round( sd( unrel.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov( plausibility ~ related + Error(item / related ), data = attrb.assoc.sing))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.sing\",\"Associated.sing\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.sing$Plausibility), 2), \" (\", round( sd( attrb.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.sing$Plausibility), 2), \" (\", round( sd( assoc.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov( plausibility ~ related + Error(item / related ), data = assoc.unrel.sing))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.sing\",\"Unrelated.sing\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.sing$Plausibility), 2), \" (\", round( sd( assoc.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.sing$Plausibility), 2), \" (\", round( sd( unrel.sing$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# # --------------------- PROP: PLAUSIBILITY PLUR vs.  PLUR -------------------------------------------------------\n# # ----------------------------- ::REL. PLUR vs UNREL. PLUR ------------\n# cat(br, br, rep(c(\"=\"), times = 50, quote = F), br)\n# cat(\"RELATED PLUR vs. UNRELATED PLUR\", sep = \"\", fill = 80)\n# cat(rep(c(\"=\"), times = 50, quote = F), br, br)\n# \n# \n# aov1<- summary( aov( plausibility ~ related + Error(item / related ), data = attrb.unrel.plur))\n# p <- zapsmall( aov1[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Attributes.plur\",\"Unrelated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$Plausibility), 2), \" (\", round( sd( attrb.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Plausibility), 2), \" (\", round( sd( unrel.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means1 <- cbind.data.frame(Condition,ds)\n# print( means1)\n# \n# ###\n# \n# aov2 <- summary( aov( plausibility ~ related + Error(item / related ), data = attrb.assoc.plur))\n# p <- zapsmall( aov2[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# \n# Condition  = c(\"Attributes.plur\",\"Associated.plur\",\"PVal\")\n# ds = data.frame(\n#   c(\n#     paste( round( mean( attrb.plur$Plausibility), 2), \" (\", round( sd( attrb.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( assoc.plur$Plausibility), 2), \" (\", round( sd( assoc.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means2 <- cbind.data.frame(Condition, ds)\n# print( means2)\n# \n# ###\n# \n# aov3 <- summary( aov( plausibility ~ related + Error(item / related ), data = assoc.unrel.plur))\n# p <- zapsmall( aov3[[2]][[1]][[\"Pr(>F)\"]][1], digits = 6)\n# Condition  = c(\"Associated.plur\",\"Unrelated.plur\",\"PVal\")\n# \n# ds = data.frame(\n#   c(\n#     paste( round( mean( assoc.plur$Plausibility), 2), \" (\", round( sd( assoc.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( mean( unrel.plur$Plausibility), 2), \" (\", round( sd( unrel.plur$Plausibility), 2), \")\", sep = \"\"),\n#     paste( round( p, 3), get_stars( p))\n#   ))\n# colnames( ds)[1] <- \"Total\" \n# means3 <- cbind.data.frame(Condition, ds)\n# print( means3)\n# sink()\n# closeAllConnections()\n# \n",
    "created" : 1440811371191.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "2|67|32|124|\n34|52|76|6|\n78|52|160|6|\n162|52|198|6|\n200|72|323|6|\n325|65|485|129|\n487|75|507|132|\n509|64|532|134|\n578|73|619|6|\n693|62|763|6|\n765|62|835|6|\n1191|55|1194|66|\n1195|47|1204|25|\n1205|55|1243|50|\n1244|45|1247|49|\n1248|45|1261|57|\n1262|48|1273|54|\n1274|48|1285|54|\n1286|48|1298|19|\n1299|43|1302|49|\n1303|45|1315|54|\n1316|48|1327|54|\n1328|48|1339|54|\n1340|48|1352|19|\n1353|52|1356|49|\n1357|45|1369|54|\n1370|48|1381|54|\n1382|48|1393|54|\n1394|48|1406|19|\n1407|54|1410|49|\n1411|45|1424|56|\n1425|48|1437|54|\n1438|48|1449|54|\n1450|48|1462|19|\n1463|74|1466|49|\n1467|45|1479|54|\n1480|48|1491|54|\n1492|48|1504|54|\n1505|48|1518|19|\n1519|72|1522|49|\n1523|45|1535|54|\n1536|48|1547|54|\n1548|48|1560|54|\n1561|48|1574|19|\n1575|57|1575|112|\n1576|45|1610|12|\n1611|47|1645|12|\n1646|47|1680|12|\n1681|47|1716|2|\n1717|58|1722|14|\n1723|68|1741|23|\n1742|59|1742|114|\n1743|53|1761|18|\n1762|55|1781|20|\n1782|73|1782|128|\n1783|60|1801|18|\n1802|73|1802|128|\n1803|61|1823|2|\n1824|52|1827|50|\n1828|62|1833|15|\n1834|61|1853|23|\n1854|55|1873|23|\n1874|76|1893|21|\n1894|80|1913|25|\n1914|66|1914|121|\n1915|60|1933|21|\n1934|62|1952|23|\n1953|71|1953|126|\n1954|60|1972|18|\n1973|72|1973|127|\n1974|61|1993|20|\n1994|66|1994|121|\n1995|53|2013|23|\n2014|55|2033|25|\n2034|66|2034|121|\n2035|53|2053|23|\n2054|55|2073|25|\n2074|68|2074|123|\n2075|53|2093|25|\n2094|55|2113|27|\n2114|81|2114|128|\n2115|72|2133|25|\n2134|72|2153|2|\n2154|52|2157|50|\n2158|58|2163|15|\n2164|67|2182|23|\n2183|58|2183|113|\n2184|53|2202|18|\n2203|55|2222|20|\n2223|81|2223|128|\n2224|69|2242|18|\n2243|80|2243|128|\n2244|69|2263|20|\n2264|53|2267|50|\n2268|63|2274|2|\n2275|68|2294|23|\n2295|62|2314|23|\n2315|83|2334|21|\n2335|87|2354|25|\n2355|73|2355|128|\n2356|60|2374|21|\n2375|62|2393|23|\n2394|73|2394|128|\n2395|53|2413|23|\n2414|55|2433|25|\n2434|75|2434|130|\n2435|53|2453|25|\n2454|55|2473|27|\n2474|87|2474|128|\n2475|72|2493|25|\n2494|72|2512|25|\n2513|81|2513|122|\n2514|66|2532|25|\n2533|66|2553|8|\n2554|4|2554|99|\n2555|4|2556|18|\n2557|57|2560|66|\n2561|44|2619|50|\n2620|47|2623|49|\n2624|45|2640|57|\n2641|48|2652|54|\n2653|48|2664|54|\n2665|48|2677|19|\n2678|45|2681|49|\n2682|45|2694|54|\n2695|48|2706|54|\n2707|48|2718|54|\n2719|48|2731|19|\n2732|54|2735|49|\n2736|45|2748|54|\n2749|48|2760|54|\n2761|48|2772|54|\n2773|48|2785|19|\n2786|56|2789|49|\n2790|45|2803|56|\n2804|48|2816|54|\n2817|48|2828|54|\n2829|48|2841|19|\n2842|76|2845|49|\n2846|45|2858|54|\n2859|48|2870|54|\n2871|48|2883|54|\n2884|48|2897|19|\n2898|74|2901|49|\n2902|45|2914|54|\n2915|48|2926|54|\n2927|48|2939|54|\n2940|48|2953|19|\n2954|59|2954|114|\n2955|45|2989|12|\n2990|47|3024|12|\n3025|47|3059|12|\n3060|47|3095|2|\n3096|54|3099|50|\n3100|60|3105|14|\n3106|70|3124|23|\n3125|61|3125|116|\n3126|53|3144|18|\n3145|55|3164|20|\n3165|75|3165|124|\n3166|60|3184|18|\n3185|75|3185|128|\n3186|61|3206|2|\n3207|54|3210|50|\n3211|60|3216|14|\n3217|62|3236|23|\n3237|71|3237|126|\n3238|52|3256|18|\n3257|54|3275|20|\n3276|77|3276|126|\n3277|60|3295|25|\n3296|73|3296|128|\n3297|60|3317|2|\n3318|54|3321|50|\n3322|60|3327|15|\n3328|69|3346|23|\n3347|60|3347|115|\n3348|53|3366|18|\n3367|55|3386|20|\n3387|71|3387|120|\n3388|59|3406|25|\n3407|71|3407|126|\n3408|61|3428|2|\n3429|55|3432|50|\n3433|65|3438|17|\n3439|64|3458|23|\n3459|56|3459|111|\n3460|53|3478|18|\n3479|55|3498|20|\n3499|66|3499|115|\n3500|60|3518|25|\n3519|66|3519|121|\n3520|60|3542|2|\n3543|4|3552|2|\n3553|55|3556|66|\n3557|42|3604|2|\n3605|45|3608|49|\n3609|45|3651|43|\n3652|48|3693|41|\n3694|48|3694|60|\n3695|48|3734|41|\n3735|48|3775|16|\n3776|42|3779|49|\n3780|45|3821|43|\n3822|48|3862|41|\n3863|48|3902|41|\n3903|48|3943|16|\n3944|43|3947|49|\n3948|45|3989|43|\n3990|48|4030|41|\n4031|48|4070|41|\n4071|48|4112|2|\n4113|51|4116|50|\n4117|57|4122|14|\n4123|67|4172|16|\n4173|58|4173|113|\n4174|55|4191|16|\n4192|55|4208|16|\n4209|58|4227|16|\n4228|72|4228|127|\n4229|60|4278|16|\n4279|72|4279|127|\n4280|61|4330|2|\n4331|52|4334|50|\n4335|67|4384|16|\n4385|58|4385|113|\n4386|55|4403|16|\n4404|55|4420|16|\n4421|58|4439|16|\n4440|59|4440|114|\n4441|60|4490|16|\n4491|59|4491|114|\n4492|61|4542|2|\n4543|52|4547|50|\n4548|67|4597|16|\n4598|58|4598|113|\n4599|55|4616|16|\n4617|55|4633|16|\n4634|58|4652|16|\n4653|59|4653|114|\n4654|60|4703|16|\n4704|59|4704|114|\n4705|61|4755|2|\n4756|52|4760|50|\n4761|68|4810|16|\n4811|59|4811|114|\n4812|55|4829|16|\n4830|55|4846|16|\n4847|58|4865|16|\n4866|60|4866|115|\n4867|60|4916|16|\n4917|60|4917|115|\n4918|61|4970|2|\n",
    "hash" : "1756957663",
    "id" : "7E063991",
    "lastKnownWriteTime" : 1440978367,
    "path" : "~/Desktop/Manuscripts/semrel_manuscript/Tables_Figures/tables_figures.R",
    "project_path" : "tables_figures.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}